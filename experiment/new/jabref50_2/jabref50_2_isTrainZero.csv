prNumber,Util,NLP,APM,Network,DB,Interpreter,Error Handling,Logging,Lang,Data Structure,DevOps,i18n,Setup,Logic,Microservices,ML,Test,Search,IO,UI,Parser,Security,Cloud,Big Data,Event Handling,App,GIS,prTitle,prBody,prIssue,issueNumber,issueTitle,issueBody,prComments,issueTitleLink,issueBodyLink,issue_Comments,isPR,isTrain,commitMessage,prCodeReviewComments,Multi Thread,Multimedia,CG,OS
491,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,add close all/others/ in database tab menu,see #314,,314,add close all/others/ in database tab menu,see #314,|| changelog is missing otherwise :+1:,add close all/others/ in database tab menu/file menu,similar to ides so i can close all open databases at once and continue working on a new or only one database,|| :+1: :sunglasses:  || continue discussion in pr #491,1.0,0.0,remove impossible todo,|| nice fixme any idea what this could mean here? || nope i forgot what it meant :smile:  || maybe it is even fixed by calling this method and i added the fixme because we must make sure that this is called every time we remove something i dont know || what about this todo? || can be removed as this doesnt work with our current impl,0,0,0,0
677,1.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,make bibtex parser more robust against missing newlines,as described in #669 and #621 the parser has some problems when an entry (or preamble) follows directly the file encoding header (on the same line)  i.e.   % encoding: myencoding @article{} . actually  as the tests reveal it was not a problem with the actual parser but within the file opening logic.  i don t view this pr as a complete fix for #669 and #621 since not just the parser but also the serialization should be improved.  also fix a bug that prevented the import of bibtex entries having only a key as its content.,,669,make bibtex parser more robust against missing newlines,as described in #669 and #621 the parser has some problems when an entry (or preamble) follows directly the file encoding header (on the same line) ie `% encoding: myencoding @article{}`actually as the tests reveal it was not a problem with the actual parser but within the file opening logic i dont view this pr as a complete fix for #669 and #621 since not just the parser but also the serialization should be improvedalso fix a bug that prevented the import of bibtex entries having only a key as its content,|| :+1: (except my minor comment) || corrected for some reason the code style was not imported correctly in intellij || hm i just use the default intellij code style :) || @tobiasdiez: what do you think should be done to fix the above issues completely? || @lenhard in my opinion jabref should add new lines after the encoding and preamble im working on a solution right now (including a bit of refactoring to make testing easier) || @tobiasdiez ok good to hear! ill concentrate on other issues then,jabref 31/32 writes bib file in a format that it will not read,if the @preamble field is present jabref 31/32 omits the newline between that line and the preceding encoding line when saving the file the resulting file is not readable by jabref sample attached problem seems to have been introduced at v31[testtxt](https://githubcom/jabref/jabref/files/89065/testtxt),|| related #621 || @tobiasdiez is this fixed? || @stefan-kolb it will be fixed with #718  || too late in the evening should have seen that myself :smile: :+1:,1.0,0.0,minor code reformatting,|| please always use curly braces as this makes the semantics explicit,0,0,0,0
734,1.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0, add an optional tab that shows fields that are not displayed inside t‚Ä¶,‚Ä¶he predefined tabs #454,,454, add an optional tab that shows fields that are not displayed inside t‚Ä¶,‚Ä¶he predefined tabs #454,,entry editor: tab for remaining fields,at the moment each bibtexentry has required and optional fields the remaining fields can only be seen in the source tab of the entry editor we should add a tab to the entry editor which shows all the remaining fields and provide the ability to change them this is a good task to start developing for jabref,,1.0,0.0,resolve conflicts,,0,0,0,0
915,1.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,add button in preference dialog to reset preferences,implements #455 and/or  -  ? -   -  ? - only ui change -  ?,,455,add button in preference dialog to reset preferences,implements #455 and/or   change in changelogmd described?-  ? ( )-  ? - only ui change-  ?,|| nice looks good but i would add a note that resetting the perferences requires a restart (see change the language or the remote settings)  || good point an info message is now shown || looks good to me,reset preference or tool for clear jabref registry,i noticed that when i use different versions of jabref some times they load different files this means that different versions read perhaps different registry keys or the jabref preference are saved in different registry locationson the same machine the 3x version preference is different to 2x version perhaps ive tested too many versions ?is there an option to reset jabref preference ?or perhaps it would be better a tool which deletes all previous jabref registries,|| you can reset the preferences by starting jabref with `java -jar jabref-211jar --prdef all -n` || we dont really need two issues in different repositories for the very same thing do we? is enough,1.0,0.0,add button in preference dialog to reset preferencesimplements #455 and/or [kopper47](https://githubcom/koppor/jabref/issues/47),,0,0,0,0
925,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,add tests for metadata parsing,this solves #707 and prepares the way to refactor the metadata class.  i added a few methods to the metadata class to make testing more convenient. many calls to getdata() in fact can be replaced by these new methods. i think this is something for a new pr.  one question: to write the tests in a nice way i had to overwrite a few equals methods. in particular for the lowercasechanger. should i also override equals for all other formatters?,,707,add tests for metadata parsing,this solves #707 and prepares the way to refactor the metadata classi added a few methods to the metadata class to make testing more convenient many calls to getdata() in fact can be replaced by these new methods i think this is something for a new prone question: to write the tests in a nice way i had to overwrite a few equals methods in particular for the lowercasechanger should i also override equals for all other formatters?,|| :+1:  || when is the equals required (except for simplifying this test)? seems like one can add them later if requiredthe pr looks good! || no as far as i can see equals is never used for the formatters (and also no getkey()equals which could be replaced with an internal equals),add tests checking parsing of jabrefs metadata (groups etc),we should add tests to `bibtexparsertest` to make sure that we do not break the meta data format,|| seems like this issue has already been fixed 8 months ago high time for closing,1.0,0.0,add tests for metadata parsingthis solves #707,,0,0,0,0
937,1.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,preview panel is now updated when an entry is cut/deleted,936. when an entry is cut/deleted the preview panel will be hidden due to the fact that no entry is selected anymore. -  ? -   -  ? -  ?,,936,preview panel is now updated when an entry is cut/deleted,936when an entry is cut/deleted the preview panel will be hidden due to the fact that no entry is selected anymore-  change in changelogmd described?-  ? ( )-  ?-  ?,|| looks good :+1: || :+1:  || :+1:  || does the panel show up again when selecting another entry after deleting one? if so :+1:  || yes it does || we really should consider to implement an event system || :+1: for the event system (maybe use the stuff that comes with google guava,preview panel is not updated when an entry is cut/deleted,when an entry is cut or deleted the preview panel is not updatedtested with the current master at 7aa371c931ea51e7c092632e3e3f817c4861f66b![notupdated](https://cloudentcom/assets/15333371/13703378/f48015de-e795-11e5-94f3-e130f76353b8gif),|| nice video :smile: for reproducing the issue!,1.0,0.0,936,,0,0,0,0
1014,1.0,0.0,0.0,1.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,improved exception handling in tests cases,never catch an exception removed unnecessary exceptions throw specific exceptions  never only exception ref #1012  -   -  ? -  ?,,1012,improved exception handling in tests cases,never catch an exceptionremoved unnecessary exceptionsthrow specific exceptions never only exceptionref #1012 -  ? ( )-  ?-  ?,|| good work! :+1: || @siedlerchr btw you should assign your commit email with your github account see  || @oscargus fixed@stefan-kolb i just added my git mail address to my github account as secondary mail address || was done by eclipse will change this back,dont catch exceptions in unit test,some unit tests catch exceptions and then call a method called fail()that has the nasty disadvantage that the stacktrace and the real exception is hidden,|| i just added a corresponding point to the wiki  || i am just going through the tests to check em,1.0,0.0,improved exception handling in tests caesnever catch an exceptionremosed unnecessary exceptionsthrow speficic exceptions never only exception,|| assign directly || indentation,0,0,0,0
1041,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,write database type in lower case into the bib file,this finally 963. a quick fix has been introduced in 661eea007e555  but that does not cover the lower case writing of the type.      @comment{jabref-meta: database_type:bibtex }      finally gets      @comment{jabref-meta: databasetype:bibtex }     -   -> this has been introduced in the development versions after the last release  thus no entry required -   -> tests have been adapted to match this new implementation,,963,write database type in lower case into the bib file,this finally 963 a quick fix has been introduced in 661eea007e555 but that does not cover the lower case writing of the type```@comment{jabref-meta: database_type:bibtex}```finally gets```@comment{jabref-meta: databasetype:bibtex}```-  change in changelogmd described -> this has been introduced in the development versions after the last release thus no entry required-   -> tests have been adapted to match this new implementation,|| is the parsing case insensitive? is that tested? || @oscargus the value is parsed case-insensitive,nicer serialization of database bibtex mode,if i switch to bibtex mode jabref writes```@comment{jabref-meta: database_type:bibtex}```biblatex mode is```@comment{jabref-meta: database_type:biblatex}```proposal: no use of uppercase letters```@comment{jabref-meta: databasetype:bibtex}@comment{jabref-meta: databasetype:biblatex}```reason: consistency with other metadata see  know that we both have camelcase and usage of dashes and underscores the jabcon addition by j√∂rg (`saveorderconfig`) used the camelcase and we should not introduce other serialization kinds should we?,|| you keep `bibtex` and `biblatex` (instead of `bibtex` and `biblatex`) because of  :innocent:,1.0,0.0,fix integrity check tests,,0,0,0,0
1056,1.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,fixes npe in export to external db,fixes npe in export to external db add db type to export succesful message reformatting #1055  no changelog because i think it was new introduced by the redesign of the entry sorting (passing null),,1055,fixes npe in export to external db,fixes npe in export to external dbadd db type to export succesful messagereformatting#1055no changelog because i think it was new introduced by the redesign of the entry sorting (passing null),|| export now all entries by default,npe in getsortedentries when exporting to external db,jabref 33 dev master commit: ed989b069b768390240fd4a2946b9f4b13142cdcreproducablesteps to reproduce:1 open export to external sql database2 choose mysql (doesnt matter)3 fill in the conn details   4  select target db/create new one4 enter name 5 click oknpe is shown:```18:53:07518 [spin-0] info  netsfjabrefguibasepanel - could not export to sql databasejavalangnullpointerexception    at javautilobjectsrequirenonnull(unknown source) ~[?:180_74]    at netsfjabrefexporterbibdatabasewritergetsortedentries(bibdatabasewriterjava:85) ~[bin/:?]    at netsfjabrefsqlexporterdbexporterperformexport(dbexporterjava:86) ~[bin/:?]    at netsfjabrefsqlexporterdbexporterexportdatabasetodbms(dbexporterjava:430) ~[bin/:?]    at netsfjabrefguibasepanel$1run(basepaneljava:544) [bin/:?]    at sunreflectnativemethodaccessorimplinvoke0(native method) ~[?:180_74]```,|| i am looking into that seems like i found the problem || yes someone still passes `null` to the entries argument which was the old version to indicate that all entries should be sorted  || @tobiasdiez  yep there is missing a getselectedentries() as parameter || hmm i thought that i (ie eclipse) had found all performexport calls but obviously not,1.0,0.0,fixes npe in export to external dbexport all entries by defaultadd db type to export succesful messagereformatting#1055,|| should really only the selected entries be exported or all (getdatabase()getentries)? previously `null` indicated the latter  || okay then i think i take better all entries to be consistent,0,0,0,0
1168,1.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1163 by removing the strange functionality which enabled sorting‚Ä¶,we have some very strange logic in jabref which allows to handle years using only the two last numbers  so we can detect that 68 means 1968. this causes a lot of issues. i do not think that jabref should still support such strange logic  and just use the value which is in the year field.   hence  i removed it.   this also solves the issue of having that yearutil in the model package which duplicated a method in the stringutil class.   refs #1163,,1163,1163 by removing the strange functionality which enabled sorting‚Ä¶,we have some very strange logic in jabref which allows to handle years using only the two last numbers so we can detect that 68 means 1968 this causes a lot of issues i do not think that jabref should still support such strange logic and just use the value which is in the year field hence i removed it this also solves the issue of having that yearutil in the model package which duplicated a method in the stringutil class refs #1163,|| lgtm :+1: || lgtm :+1:  || should we readd yearutil as a cleanup to convert two digit years to four digit years? || if we add it we should make use of the java 8 functionality instead of the own ugly parsing: this one:http://stackoverflowcom/questions/29490893/parsing-string-to-local-date-doesnt-use-desired-century,year sorting doesnt work,clicking on the year column doesnt affect the sorting of the table,,1.0,0.0,1163 by removing the strange functionality which enabled sorting of two-digit years as well,,0,0,0,0
1192,1.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,preview panel is now updated when an entry is cut/deleted (again),when i fixed #936 some time ago (pr: #937) i made a tiny error.  the issue was to hide the preview panel when deleting/cutting an entry  but it also hid it when aborting the delete-confirmation-dialog. i too refactored both actions a little to make it easier for future changes.  i also removed in  undoableremoveentry  and  undoableinsertentry  the id generation.,,936,preview panel is now updated when an entry is cut/deleted (again),when i fixed #936 some time ago (pr: #937) i made a tiny errorthe issue was to hide the preview panel when deleting/cutting an entry but it also hid it when aborting the delete-confirmation-dialogi too refactored both actions a little to make it easier for future changesi also removed in `undoableremoveentry` and `undoableinsertentry` the id generation,,preview panel is not updated when an entry is cut/deleted,when an entry is cut or deleted the preview panel is not updatedtested with the current master at 7aa371c931ea51e7c092632e3e3f817c4861f66b![notupdated](https://cloudentcom/assets/15333371/13703378/f48015de-e795-11e5-94f3-e130f76353b8gif),|| nice video :smile: for reproducing the issue!,1.0,0.0,fix 936 (again) and some refactoringremoving new id generation because its not necessary,,0,0,0,0
1229,1.0,0.0,0.0,1.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1091 apply and ensure correct import sort order,see #1091,,1091,1091 apply and ensure correct import sort order,see #1091,|| :+1: || lgtm :+1:,structure of imports,as discovered in #1089 there might be a problem with intellij restructuring the imports vs how eclipse does it i just run into the same problem with #1090 so i would like to discuss here what the correct preferences for intellij are the following settings produce a somewhat satisfying result but there are still quite a few difference to some imports in some files![untitled](https://cloudentcom/assets/5037600/14232775/2cbbfa04-f9b5-11e5-80ee-4f9743df5431png),|| i just posted this at the pr:maybe you could evaluate that: || we need something like checkstyle which enforces it using gradle we should maybe activate checkstyle for this making the build fail if the imports are not in order  || i looked through some of the source files and have noticed that there is no clear order in which the classes are importedthus i think we firstly need to decide on a proper order (eg first jdk related imports then jabref and after that the rest with a blank line between)furthermore i prefer the fully qualified imports over the generalized ones (*) || checkstyle checks are now in place for forcing one to remove unused imports we can add additional checks eg for the import order but we should be careful not to add to much and only add additional checks as an evolution of the code base see 9e9fc8c || ( || ![image]( || in eclipse automatically generated - use `gradlew eclipse`![grabbed_20160412-143351]( || ![image]( || this is solved do we need to post the intellij configuration at  || did we document this in the wiki? || it is now added at https://githubcom/jabref/jabref/wiki/guidelines-for-setting-up-a-local-workspace#intellij,1.0,0.0,merge branch master into import-sort-order-fixed,,0,0,0,0
1298,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,added option to copy version information in the about dialog,added option to copy version information of jabref in the about dialog as described in #871 . this will help with filing issues and bug reports as the version of jabref  os and java will be copied.  -   -   -   ()  ![screen shot 2016-04-25 at 22 38 58](https://cloud.ent.com/assets/15340757/14798171/915a5bbc-0b36-11e6-8bbf-b01cb100b2cd.png),,871,added option to copy version information in the about dialog,added option to copy version information of jabref in the about dialog as described in #871 this will help with filing issues and bug reports as the version of jabref os and java will be copied -  change in changelogmd described-  -   ()![screen shot 2016-04-25 at 22 38 58](https://cloudentcom/assets/15340757/14798171/915a5bbc-0b36-11e6-8bbf-b01cb100b2cdpng),|| just one minor comment otherwise this looks good please rebase || ## [current coverage]( is **2749%**> merging 1298]( into [master]( will decrease coverage by **-<01%**``` diff@@             master      #1298   diff @@  files           694        696     +2     lines         46259      46419   +160     methods           0          0            messages          0          0            branches       7650       7677    +27   + hits          12755      12760     +5   - misses        32404      32555   +151   - partials       1100       1104     +4   ```1 3 files (not in diff) in `/net/sf/jabref/logic` were deleted [more]( 1 files (not in diff) in `n/java/net/sf/jabref` were deleted [more]( 2 files (not in diff) in `bref/logic/formatter` were created [more]( 2 files (not in diff) in `jabref/logic/cleanup` were created [more]( 1 files (not in diff) in `n/java/net/sf/jabref` were created [more]( 4 files (not in diff) in `f/jabref/model/entry` were modified [more](    - misses `+8`    - hits `-12`7 5 files (not in diff) in `/jabref/logic/groups` were modified [more](    - misses `+22`    - partials `+3`    - hits `-1`8 3 files (not in diff) in `jabref/logic/cleanup` were modified [more](    - misses `+6`    - hits `+8`9 3 files (not in diff) in `/net/sf/jabref/logic` were modified [more](    - misses `-2`    - partials `-2`    - hits `-2`10 3 files (not in diff) in `t/sf/jabref/importer` were modified [more](     - misses `-5`     - partials `+1`     - hits `-1`> powered by [codecov]( last updated by [7230a80941240f](https://codecovio/gh/jabref/jabref/compare/7230a809da3e138e362b56366043c4a18b267ca1941240f674c02e07a8aae88010b1c0f9dd4a3a6f),about dialog should enable copy and paste,- jabref version (available in the about box): jabref 33dev--snapshot-2016-02-26--master--20e95f9- operation system and version: windows 81- steps to reproduce:   1 open about dialogwhen filing an issue it should be easy to copy the version string![grabbed_20160226-142525](https://cloudentcom/assets/1366654/13353450/c9b8750a-dc94-11e5-8b96-d8447c5227a6png),|| additionally i note some weird characters among the author names they appear both on your screenshot and on my linux computer || the weird characters are because of [gradle-1267]( fixed by  which is not integrated yetsee also #682 || see intelij copy to clipboard link in about dialog || @boceckts could you port the copy and paste from #964 to the `master` branch (without javafx libraries)? || refs #968 (javafx) and #1298 (swing) i think its solved,1.0,0.0,added option to copy version information in the about dialog,|| why the indent here? || dont use underscores here and remove stringformat (or is this necessary?) || no its not necessary this was from a previous version and is now removed || creating this info version string along with the static variables should be moved to the buildinfo class  || i moved them into the buildinfo class and made them static,0,0,0,0
1318,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,update localization instructions,corrected gradlew task name #1312  @koppor  @stefan-kolb,,1312,update localization instructions,corrected gradlew task name#1312@koppor  @stefan-kolb,|| please check the order of the imports:  || hm will check my eclipse settings again || `gradlew eclipse` should be enough --> we are generating the correct settings no need for manual intervention || @koppor  fixed the import order the setting was not activated in my eclipse saving options  || ## [current coverage]( is **2751%**> merging 1318]( into [master]( will not change coverage``` diff@@             master      #1318   diff @@  files           695        695            lines         46382      46382            methods           0          0            messages          0          0            branches       7677       7677            hits          12760      12760            misses        32518      32518            partials       1104       1104          ```> powered by [codecov]( last updated by [1aa2145522607b]( || lgtm :+1:,update contributing localization information,see  use the gradle task for now,|| in my other pr  #1265   already changed the error/info text output of the consistencytest  output to the new gradle task name edit// linked wrong pr || @siedlerchr wrong pr referenced?,1.0,0.0,update localization instructionscorrected gradlew task name#1312,|| wrong indent? (also the other lines) || hm will look into that and i use gradlew eclipse || @jabref/developers can these irrelevant statements for the other languages be removed?,0,0,0,0
1388,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,fix sorting issue #1357,the logic is fucked but this should fix the issue.  problem was that when sort in original order was selected  the corresponding variable newsortorder would still read the disabled sort order inside the jdialog.,,135,fix sorting issue #1357,the logic is fucked but this should fix the issueproblem was that when sort in original order was selected the corresponding variable newsortorder would still read the disabled sort order inside the jdialog,,unify all paste actions,,|| could you elaborate a bit why you opened and why you closed it? im just curious :) || dont think it makes sense to do it that way we more likely need a controller-based solution for this,1.0,0.0,fix sort issue by @benni0815 #1357,,0,0,0,0
1397,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,add fields for nbibimporter and add testfile,regarding: 1063]( the medlineplain importer doesn t have all fields  that the nbib format has. so i added the fields to the medlineplain format and added a test+ testfile for the nbib format. a list of the elements that should be imported now  can be found [here]( -  ,,1063,add fields for nbibimporter and add testfile,regarding: 1063]( medlineplain importer doesnt have all fields that the nbib format has so i added the fields to the medlineplain format and added a test+ testfile for the nbib formata list of the elements that should be imported now can be found [here](  ,|| you should also record your changes in the readme || lgtm || for somehow the travis-ci is failing because an integration test scrollingthroughentrylist fails || lgtm too just some minor remarks for readability,importer for pubmed nbib format,an importer for pubmed nbib format would be a nice addition to the importersas an example see  see #510,|| at least for their xml fomat there is a simple xsl-script: i found a kind of reference-field-list for the nbib-medline format and their meanings: with this table: || hm we got a medline fetcher whats the difference between our medline/medline plain and nbib? || medline plain is a subset of nbib so every field of medline plain is also a field of nbib but not every nbib field is in the medline plain format i will prepare a pr where i add the fields to the medline plain importerafter that i will take care of medline and nbib || ive added the nbib fields to medline and medlineplain so i think this issue can be closed now,1.0,0.0,improve readability,|| why did you change these lines? imo the old layout was easier to read || you should do a general renaming refactoring it is hard to follow statements like this and with all the abbreviations hm lab val || why article-id and not doi here? || i wasnt sure if it is right if there stands `doi:` [here]( it says that doi has to come at the end in brackets thats why i thought it would be wrong to add this as doi should i keep both possibilities ? || sorry but i dont really get what youre trying to say :smile: check out `doijava` it includes the regex for a valid doi typically all our dois are just the doi starting with the vendor code ie 101016/jcpr200502002from my understanding the removed line is the right result except that the key should be lowercase but correct me if im wrong and dont understand the use case here! || oh ok the problem i thought is that in the [medline description](  for the aid element there come an example like this: `aid - 101016/jcpr200502002 [doi]` so that `[doi]` has to come at the endthats why i thought that something like `doi:101016/jcpr200502002` would be wrong my question now is whether both incidents of the doi should be possible or just one of them ?was this a little bit more understandable ? :)  || actually the doi should be extracted by the importer to a correct format like i pointed out || ok ive changed it to doi in lowercase || you can specify in regex how often a specific expression should match instead of repeating it over and over  || eg `\\d{8}` exactly 8 times || done || could you please store the conversation as a `map<medlinekey bibtexkey>` and then iterate over this map should be more readable  || again a switch or map should be more readable || done || done (hope that i unterstood it right),0,0,0,0
1429,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1342: show description of case converters as tooltip,<describe the changes you have made here:   > -   -   -   (),,1342,1342: show description of case converters as tooltip,<describe the changes you have made here:  >-  change in changelogmd described-  -   (),|| lgtm :+1:,enhancement request: representative change case entries,version/os agnosticrecommend changing the right-click change case entries as follows:1 lower case -> lower case2 upper case -> upper case3 sentence case -> sentence case4 capitalize -> capitalize (all first letters)5 title case -> title case (the key words)6 protect terms -> protect termshopefully these new entries will better communicate the effect of each (where upper case capitalize and title case are not immediately obvious),|| this was supported in a previous jabref version but was changed to have standardized names due to  the save actions || in that case will the right-click menu be disappearing from the interface?  i like the idea of consistency applied through save actions / clean-up  however if a user is interactively using the feature when entering text in a box it would seem better to have context immediately provided || we add a tooltip with the description what the formatter does when hovering over the action in the right-click menu this should suffice :) || a tooltip would be great thanks!,1.0,0.0,1342: show description of case converters as tooltip,,0,0,0,0
1440,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,1420 auto downloader should respect file pattern and propose correct filename,(https://cloud.ent.com/assets/2141507/15472274/898030a4-20fa-11e6-9a77-8cfac10688d5.png),,1420,1420 auto downloader should respect file pattern and propose correct filename,(https://cloudentcom/assets/2141507/15472274/898030a4-20fa-11e6-9a77-8cfac10688d5png),|| lgtm || lgtm :+1:,auto downloader should respect file pattern and propose correct filename,currently it just renames to `\bibtexkey`,,1.0,0.0,rework tests,|| so the field `bibtexkey` is no longer required right? || bibtexkey is used inside createfilenamefrompattern,0,0,0,0
1443,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,651: improve parsing of author names containing braces,651. -   -   -   (),,651,651: improve parsing of author names containing braces,651-  change in changelogmd described-  -   (),|| lgtm,author parser has problem with latex symbols,the author `h{e}l\grave{e}ne fiaux` is shown as `fiaux he` in entry preview would have expected `fiaux h`,|| yeapi remove all the latex stuf and opened ok (the eof error persist) || one should probably use the bibtex-vm-based name formatters || note that the above is a bad example since the correct way to write the acute accent is `\{e}` and `h\{e}l\grave{e}ne fiaux` is correctly written as `fiaux h`however `h{e}lene fiaux` results in the unexpected `fiaux he` || i propose to close this as it is only a very minor bug which only occurs in very special circumstances with bad input any objections @jabref/developers ?,1.0,0.0,651: improve parsing of author names containing braces,,0,0,0,0
1453,1.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,refactor placement of parsing and writing logic,according to the following conventions: - all objects which can be read from a string have  public static type parse(stringy input)  method. - all objects which can be written to a string have a  public stringy getasstring()  method.  should 888. ##  -   -   -   (),,888,refactor placement of parsing and writing logic,according to the following conventions:- all objects which can be read from a string have `public static type parse(stringy input)` method- all objects which can be written to a string have a `public stringy getasstring()` methodshould 888## -  change in changelogmd described-  -   (),|| i am still an advocate of separate read/write classes which handle the serialization in both ways because:- using an interface with fromstring/tostring methods would allow to make this more explicit in the code and ensure that these methods are not renamed by accident- using separate classes for reading/writing would make the classes themselfs smaller and allow a better separation of concern - easier to test as one only needs to look at a single cread/write class with its own test || yes you are right that separate read/write classes are probably even better nonetheless i find the changes made in this pr are still an improvement and im quite satisfied with the result (satisfied enough to have no motivation for introducing new read/write classes) || i changed the names thanks for the feedback!,[code] placement of parsing and writing logic,right now parsing and serialization is not handled in a uniform way (see eg #875)possible designs which come to my mind:- the bibparser and bibwriter contain all the logic as private methods  - eg: bibparserparsemetadata(string stringymetadata) and bibwriterwritemetadata(metadata)  -  pro: encapsulation of responsibilities  - contra: rather big classes bibparser and bibwriter hard to test- there are transformer classes which just convert the string to the object and vice-versa  - eg: metadatatransformer with static parse(string stringymetadata) and static write(metadata) [suggestions for a better name then transformer? readwriter?]  - pro: encapsulation of responsibilities (but weaker as 1) can be reused somewhere else better testability  - contra: exposes writing and parsing to the outside world many new classes- the corresponding objects have methods which allow parsing and converting to string  - eg: metadata has static parse(string stringymetadata) [or constructor?] and serialize()  - pro: encapsulation of responsibilities (but weaker as 1 and 2) can be reused somewhere else better testability as 1  - contra: exposes writing and parsing to the outside world scatters parsing and writing logic i have no strong opinion about which option we should use (slightly preferring 2) but we should decide for _one_ to handle parsing and writing uniformly,|| my 2 cents: for the file field we provided a class that can convert from string to list<parsedfilefield> and back to me the bibwriter and bibparser know how to write bibentries using key/value pairs of strings and metadata in its general format all other information should be part of such converter classesbut i am not sure whether this approach is currently feasible for the metadata as its serialization and parsing is highly customized and does not follow a general scheme as the bibtex structure does || i have been dealing with the serialization of `metadata` a lot lately i can say that it is feasible to extract this logic currently it is quite localized in private methods in the parser and writer and we should be able to move it without too much effort the difficult part about serializing `metadata` is that every tag has very specific serialization conventions which requires a lot of if/elseif structuring moreover i dont think this will require a lot of new classes after all for what kind of data do we need such transformers? `metadata` `customentrytype` what else?the parser and writer would benefit from a simplifaction so i am for moving this logic,1.0,0.0,rename some getasstring methods,|| i am not so happy with naming convention here (and below) after all this returns no string as the name indicates could we make the convention a little more flexible to better describe the result say: `getasstringmap` `getasstringlist` etc? || i think that makes sense can you change that please @tobiasdiez and merge it in? :trophy:,0,0,0,0
1487,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,implement getextension and getdescription for importers,implement getextension and getdescription for importers. #1444  -   -  ,,1444,implement getextension and getdescription for importers,implement getextension and getdescription for importers #1444 -  change in changelogmd described-  ,|| please fix the minor things after this mark it again for ready-for-review and we will merge this in,implement getextension and getdescription for importers,this is a follow up from #1207:the methods getextension and getdescription are not implemented by almost any importer this should be done also the `@ignore` tag for the corresponding tests should be removedi think this is something for the stupro,|| should be fixed by #1487 isnt it?,1.0,0.0,merge remote-tracking branch upstream/master into issue1444 and fix codacy,|| can you check whether there is an other source for the endnote format? || if its also for inspec and medline then txt should also be an extension shouldnt it?  || can this be declared as private or protected? || extract the list as a field otherwise everytime when the method is called a list is initalized you can extract the add also if you use arraysaslist() || extract list as a field (see above) || extract list (see above) || have a look at the link for the medlineplainimporter where the elements are described then you will also find a link fpr the medline xml format this link could be added here || add a link here || i think you can guess which extension should be here) || why have you changed this? why have you not kept the link? || just compare the lists (in every test case) || see above || use arraysaslist || use arraysaslist or collectionssingletonlist( in every test case) || line break || thats the wrong link you need the link for the [xml elements]( || do the todo :smile:  || pls dont use test-related stuff in the original class || no need for these tests for getextensions and getdescription you are just repeating static values here || i think everything accessible by others should be tested even though though the tests feel dump reason: we are trying to increase code coverage and these tests increase it too || i like the bottomline `test everything that could possibly break` of  but since these tests are already in place we can leave them there  || why the additonal `<p>`? || why the removed indent? || just use assertequals(extensions importergetextensions()) instead || ok for @jabref/developers but in the future a small reasoning should be kept or the @jabref/stupro-qa  comment should be deleted || i guess it happened due to reformatting the code in intellij,0,0,0,0
1584,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,added layout dateformatter  see #1249,added a configurable layout formatter for dates. 1249. -   -  ,,1249,added layout dateformatter see #1249,added a configurable layout formatter for dates 1249-  change in changelogmd described-  ,|| lgtm just merge after you removed the generated comment,date formatter,using more and more biblatex format i would like to have the possibility to have a date formatter could be similar to already existing one : \format[currentdate]{yyyymmdd},|| so if i understand you correctly you want a formatter which formats the date field to a specific form (say yyyy/mm/dd)? || yes exactly! for now date field is output as yyyy-mm-dd but i would like the possibility to use at mm/yyyy for my documents needs thanks || @meltr biblatex explicitly needs the date format in iso from the biblatex reference manual:  date specifications > the date fields dateorigdateeventdate and urldate require a date> specification in yyyy-mm-dd format date ranges are given as yyyy-mm-dd/yyyy-mm-ddthe formatted display of the date in the citation/bibliography is depending on the biblatex style and language you use and of couse if you provide the arguments:see 311 load-time options for an example || @siedlerchr : @meltr is talking about a layoutformatter to export the bib-file to some other suitable format (or to use with openoffice/libreoffice) || ah now i get it :) it was a bit confusing for me,1.0,0.0,removed comment (sorry about that),|| can you remove this line please?,0,0,0,0
1599,1.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,fixed #1592,this should 1592. -  ,,1592,fixed #1592,this should 1592-  change in changelogmd described,|| lgtm,libreoffice: wrong numbers in citation labels,jabref version 35 on mac os x 10115libreoffice 5142steps to reproduce:1 connect to libreoffice text document2 select style default [number]3 insert twice the same citation4 click on the update buttonexpected result:> [1] [1]actual result:> [1] [1 2]example bibliography:```@article{a  author   {a}  title    {a}  journal  {a}  year     {2016}}```screenshot:![testjabref](https://cloudentcom/assets/5209500/16888553/0bc9600c-4ae1-11e6-8672-8ae4602e4795png),|| there is a version that should fix this at  (in 15 minutes or so) please try it out || it works as expected nowthanks for fixing it so quickly!,1.0,0.0,fixed #1592,,0,0,0,0
1671,1.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1288 newly opened bib-file is not focused,-  open a new file and it is correctly focused afterwards -  open a file that was already opened before is correctly focused afterwards -  open a file two times and it is only opened once,,1288,1288 newly opened bib-file is not focused,-  open a new file and it is correctly focused afterwards-  open a file that was already opened before is correctly focused afterwards-  open a file two times and it is only opened once,|| @matthiasgeiger should work now :smile:  || lgtm (apart from the minor comments via skype :wink: ),newly opened bib-file is not focused,jabref version 33steps to reproduce:prerequisite: jabref is registered as the default application for *bib files1 close all jabref instances2 open a bib file from the file system3 jabref is opened the file used least recently is selected - and not the newly opened bib file(side note: if remot ops are activated and jabref is already running the newly opened file is focused correctly),|| should be a focus thing inside `jabrefguijava` near line 108,1.0,0.0,only open files if not already opened,,0,0,0,0
1888,1.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,do not mark a new database as changed,1881 . i missed an if-statement when inverting an if/else in #1830  - ~~ ~~ - introduced in development version only (fortunately) -  manually tested changed features in running jabref,,1881,do not mark a new database as changed,1881  i missed an if-statement when inverting an if/else in #1830 - ~~ change in changelogmd described~~ - introduced in development version only (fortunately)-  manually tested changed features in running jabref,,new database is marked as changed,if a completely new database is created there should be no confirmations required to close it,|| this is already the case? _file_ -> _new database_ *- do nothing - *_file_ -> _close database_no message is shown || not in my development version just noticed it so i think it is something quite recent || i can confirm this behaviour in the dev version on windows to || my bad ill add a pr fixing this in a minute,1.0,0.0,do not mark a new database as changed,,0,0,0,0
1942,1.0,0.0,0.0,1.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,mods importer,regarding: #1920   adds an importer for the mods (xml) format. the importer is written with a jaxb parser. details on the format and the newest xml schema can be found [here]( i ve used the newest schema (version 3.6). -   -   -  manually tested changed features in running jabref,,1920,mods importer,regarding: #1920 adds an importer for the mods (xml) format the importer is written with a jaxb parserdetails on the format and the newest xml schema can be found [here]( used the newest schema (version 36)-  change in changelogmd described-  -  manually tested changed features in running jabref,|| i just merged my xmlunit changes n #1944  i think it can useful for you too allows checking/validating xml against a schema too  || i think your code looks good but generally i would like to see more comments and try using more lambdas :+1:  || i dont really get why travis is failing  || the problem seems to with the integration tests not related to your changes || hm im also wondering why codecov is not running the tests the test coverage should be much higher || i dunno about codeco from my point of view its good! :+1: @boceckts  please have a final look || okay i merge it in now as all things are resolved :+1:  regarding the failing tests we should investigate that in a new issue,importer/exporter for mods format,since jabref has an exporter for the mods format it would be nice to have also an importer for this formatthere is a xml schema available [here]( so i think it would be the best to write the importer with a jaxb parserbut then it could happen that exporting in mods format and importing in mods format are not working correctly so i think the exporter should also be rewritten with a jaxb parserif there are no arguments against it i would take care of this,|| +1 || i will close this as everything seems to be done,1.0,0.0,extract context and check if it is null,|| this whole if/else instanceof looks really uglya possible solution would be to create a generic method like:`public static <t> t unmarshal( string xsdschema string xmldatei class<t> clss )`have a look at the link here there is an example implementation || cant this be replaced by `locationgetphysicallocation()stream()map(loc -> locgetvalue())foreach(locations::add)` || again try to use streams and lambdas || a for loop and only one if statement on the elements seems a lot like filtering have a look at `streamfilter()` || i think this should be indented || sorry but i dont really get how this can help here i have to know explicit which class groupelement is an instance of otherwise im not able to use the specific methodsfor unmarshalling i have the problem that there can be two elements be the root element (modsdefinition and modscollectiondefinition) || maybe you looked at an old commit now there are two ifs and i think using a stream here would make it much more unreadable || yeah i know the thing is my idea/thought was to create a single method which does the instanceof checking in a generic way like  `static <t> getelement(obj groupelement class<t> clazz)`have a look at the second anwer here: you could simply do a call: like  `genredefinition def  getelement(modselement genredefintionclass)`and of course you would need to check for isassignable || like the idea with the optionals :+1:  keep on the good work!you could even simplify that more: if you just use the `ifpresent`of optional (accepts a lambda) you can omit those if/else if complety and the check of ispresent because as the name already says it gets only executed if the value in the optional is present || done thanks for your feedback ! || replace `url -> urlgetvalue()` by `urldefinition::getvalue` || same as above || `element -> elementgetvalue()` can also be replaced || switch statements should be indented || uppercase `i` || @tobiasdiez did we want to get the keyword separator from preferences now? refs #1877  || its okay no need for streams here || better use isempty() for familyname too || see above || ive used the keywordseparator from the preferences now || done || done || just a non-so-critical remark: `jaxbcontext` is known to be an object that is costly to construct and doing this often might result in performance issues hence you typically build it once and keep it could you extract `context` as an instance variable? then check on execution of `importdatabase` if it is null and if so initialize it || done,0,0,0,0
1944,1.0,0.0,0.0,1.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,1.0,1.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,try around with xmlunit,   -->  see #1943 for details  -   -   -   () -  -   ( []()?),,1943,try around with xmlunit,   -->see #1943 for details -  change in changelogmd described-  -   ()-  manually tested changed features in running jabref-   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),|| please fix the two comments and then directly merge it,use xmlunit for xml comparison in tests,atm the xml files are just compared as strings major disadvantage: hard to spot the error when there is an errorwell then i discovered this awesome library called xmlunit and tried a bit around with it the best thing is it has support for throwcomparisonfailure which allows to show a nice side by side comparison window in the ide: tried around with it see my pr> when testing xml your application creates simple string comparisons dont cut it as there are many different ways the same xml content is serialized to a string it doesnt even stop with serialization as sometimes you dont care for the order of xml elements and sometimes you do> > xmlunit provides you with the tools to verify the xml you emit is the one you want to create it provides helpers to validate against an xml schema assert the values of xpath queries or compare xml documents against expected outcomes> > the most important part is a diff-engine that provides you with full control over what kind of difference is important to you and which part of the generated document to compare with which part of your reference documenthttp://wwwxmlunitorg/,,1.0,0.0,merge branch master into xmlunit* master:  remove obsolete wrapper task  added error dialog when setting invalid main file directory (#1921)  add filteringcharset  utf-8 (#1945)  include   searchbar across all bib files instead each having its own (#1549)  some oo/lo cleanups (#1927)  update link  removed external dependency in logic (#1934),|| indent || once upon a time there was a sad test code because we decided against using hamcrestthus could you change the hamcrest-like syntax `assertthat(something readable)` to the good-old `assertequals`? i think xmlunit also supports these through  || what was the reason for the decision? i now use assertfalse || @tobiasdiez  i tried a bit around and i could get it working with assertfalse however it has the disadvantage that it does not throw a comparisonfailure exception which would allow you to see the details directly in the ide: || assertxmlequal does not work? || nope it seems to from the old legacy api different incompatible namespace || ok then leave it like that because assertfalse does not make any sense,0,0,0,0
1950,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,towards hierarchical keywords,   -->  this pr is the first step towards supporting hierarchical keywords #628.  -  refactor the keyword-related code to use new classes  keywordlist  and  keyword   -  unified keyword delimiter to be a single character and in this way fixed the issues mentioned in #705 and #1877 -  move keyword delimiter from preferences to metadata (database properties) -> new pr -  add hierarchical delimiter and change parsing logic in  keywordlist  accordingly -> new pr -  change ui to support hierarchical keywords -> new pr  note: i also moved the stringutil class to model (in some sense it is jabref s own string class) and removed entryutil (only had methods related to strings (-> stringutil) or keywords (-> keywordlist) ). -   -   -   () -  -   ( []()?),,1877,towards hierarchical keywords,   -->this pr is the first step towards supporting hierarchical keywords #628 -  refactor the keyword-related code to use new classes `keywordlist` and `keyword` -  unified keyword delimiter to be a single character and in this way fixed the issues mentioned in #705 and #1877-  move keyword delimiter from preferences to metadata (database properties) -> new pr-  add hierarchical delimiter and change parsing logic in `keywordlist` accordingly -> new pr-  change ui to support hierarchical keywords -> new prnote: i also moved the stringutil class to model (in some sense it is jabrefs own string class) and removed entryutil (only had methods related to strings (-> stringutil) or keywords (-> keywordlist) )-  change in changelogmd described-  -   ()-  manually tested changed features in running jabref-   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),,keyword separator behaviour (again from a groups perspective),let me rephrase this: the use of the keyword separator is ambiguous in jabref it is by default set to `` this leads to:1 stringtokenizer splits on both `` and ` `2 when adding keywords` ` is used as a separatorclearly these two behaviors are just by luck sometimes compatible based on 1 it would be better to have `` as the defaultin addition the entryutil method for splitting on keywords used by bibentry totally ignores thisrelates to #705 ( @siedlerchr s comment was for the previous wording of this although it is still relevant)i can in this context note that quite a bit of the refactoring ive made recently has been to pass this separator down to the correct methods except for the fact that i know that it is bad i would almost suggest having the separator as a global static variable in model,|| string tokenizer ist really really legacy code  should either be stringsplit or scanner || and in medlineimporter the author decided to use `` as separator and ignore the preferences (the separator from the preferences is available in importformatpreferences) || addressed in #1950,1.0,0.0,fix arxiv tests,|| not that this is an error or anything the like but there is hardly ever an advantage of using `character` over `string` (except for illusive memory benefits) so what is the reason for this change and all the related changes in this pr? || so if i get this correctly you merged `stringutil` into `entryutil`? we have had discussions about this before and i am not entirely happy with it `stringutil` has a high potential of becoming a god class that can do everything and is used everywhere please lets be careful with thisin the end however i also see no point in arguing endlessly over it so it is ok for me for now however please not that on current master there is the class `modelutilmodelstringutil` there is absolutely no change that i would tolerate two string util classes in model so youll have to merge that one as well || nitpick: rename `s` to `keyword` :) || nitpick: improve naming in the new code here || i do not like that you extend the api class here that way `keywordlist` inherits all kinds of methods that it probably does not need and is prone to weird polymorphic misuses instead `keywordlist` should have an internal attribute of type `arraylist<keyword>` and just provide a limited subset of methods that are really needed to modify this attributealso the current implementation supports duplicates in the list is this reasonable for keywords? wouldnt duplicate elimination make sense here? || i dont quite get why this class is introduced in this pr || please add tests that document the behavior in case of duplicate keywords || there were some issues related to strings as keyword separators for example the default is `` (with space) but some places tried to split strings only at the comma (ie recognize `appleorange`) the space was only used to reformat the list as `apple orange` so i decided to force that only one character can be used as a separator and the final space is always adapted upon writing || yes we now have a modelstringutil class which already moved some string-related methods to model i would propose to merge everything together: logicstringutil modelmodelstringutil and modelentryutil they all deal with the same thing i will create a separate pr with this change (because it also makes merging easier)  || composition over inheritance noted!i wasnt sure how to handle duplicates there was some code which tried to replace a keyword exactly at the same position: `a b c` -> `a replace c` this was not easily possible with set but just one line with list not sure that this was the right decision through what is your opinion? || ok sounds reasonable lets hope that no one ever wants to use some weird multi-keyword separator || ok i understand do this in a separate pr but please do not forget it :) || tough question really personally i cannot come up with a reason to have duplicate keywords but users are weird as we all know :) it is probably best if we just keep things as they were for the moment since the keywords were prior stored as a string it was certainly possible to add duplicates so let us keep this for now my fear is that it may result in random bugs where processing stops because a keyword is found and another occurrence of the keyword is still in the listas a side note: you do not have to use a set to avoid duplicates you can also use a list internally and purge duplicates at the level of `keywordlist`  || i now changed it so that no duplicates are left upon parsing a string to a keywordlist i feel we get more bugs if the list may actually contain duplicates,0,0,0,0
1970,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1958: verbatim url field is no longer checked for html encoded chars,-   -   -  manually tested changed features in running jabref,,1958,1958: verbatim url field is no longer checked for html encoded chars,-  change in changelogmd described-  -  manually tested changed features in running jabref,|| please adjust the javadoc comment and then its good to merge :+1:,url with encoded html characters is shown as a violation regarding the integrity check,jabref version 37dev (latest) on windows 10steps to reproduce:1 have an entry with url field ` check integrity3 as url has `&amp` inside it an integrity check violation is shown but the url is perfectly valid and no integrity check violation should be shown,|| integrity check for url should be disabled generally at least in biblatex all url related fields are treated as verbatim || there is `fieldpropertyverbatim` that can be used as there are more fields which are verbatim in biblatex || like this? `if (!internalbibtexfieldsgetfieldproperties(fieldgetkey())contains(fieldpropertyverbatim)) {`,1.0,0.0,javadoc,,0,0,0,0
1981,1.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,icon does not change when toggling global search,issue: #1979,,1979,icon does not change when toggling global search,issue: #1979,,for toggle icons the icon should stay the same,jabref version jabref 37dev--snapshot--2016-09-14--master--ff7c9b2 windows 10 100 amd64  java 180_102steps to reproduce:1 open jabref see toggle global search with strike-through globe2 toggle button3 globe is activated but the icon changed to a normal globei would expect that if it is active the toggle status already shows this and the icon stays the same hence i would propose to just use the globe,,1.0,0.0,icon does not change when toggling global search,,0,0,0,0
2114,1.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,ctrl-s parsing error message,2109. ctrl-s doesn t trigger parsing error message. problem: conflict of local shortcut (of the entry editor) with the global shortcut. solution: local shortcut removed. (the action assigned to local and global shortcut is essentially the same (save database)) -   -   -   () -  -   ( []( -  if you changed the localization: did you run  gradle ate ?,,2109,ctrl-s parsing error message,2109 ctrl-s doesnt trigger parsing error messageproblem: conflict of local shortcut (of the entry editor) with the global shortcutsolution: local shortcut removed (the action assigned to local and global shortcut is essentially the same (save database))-  change in changelogmd described-  -   ()-  manually tested changed features in running jabref-   ( [helpjabreforg](  if you changed the localization: did you run `gradle ate`?,|| i have tested it and can confirm that it works removing the local shortcut is fine this was certainly the relic of some migration since it is not too much in size there is no need for a second review and ill merge right away@grimes2 good job as always :-),ctrl-s doesnt trigger parsing error message,latest dev versionsteps to reproduce:1 entry editor > bibtex source tab2 generate parsing error example: }3 ctrl-s4 the parsing error message is not triggeredfile > save database and save button work shortcut not,,1.0,0.0,ctrl-s parsing error message,,0,0,0,0
2163,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,fix highlighting issues,2133.  earlier  highlighting was done manually by adding tags to matches in the html text being sent to the pane. instead  i have opted to make use of the highlighting features of the jeditorpane class. this gives the additional benefit that the highlight colour is changed automatically based on the system theme.   changes  - created jeditorpanewithhighlighting class - removed matchhighlighter class and its tests - removed highlighting related tests from layoutentrytest -   -   -   () -  -   ( []( -  if you changed the localization: did you run  gradle ate ?,,2133,fix highlighting issues,2133earlier highlighting was done manually by adding tags to matches in the html text being sent to the pane instead i have opted to make use of the highlighting features of the jeditorpane class this gives the additional benefit that the highlight colour is changed automatically based on the system theme changes - created jeditorpanewithhighlighting class- removed matchhighlighter class and its tests- removed highlighting related tests from layoutentrytest-  change in changelogmd described-  -   ()-  manually tested changed features in running jabref-   ( [helpjabreforg](  if you changed the localization: did you run `gradle ate`?,|| :checkstylemain[ant:checkstyle] [error] /home/travis/build/jabref/jabref/src/main/java/net/sf/jabref/gui/worker/citationstyleworkerjava:6: javaxswingjeditorpane should be separated from previous imports [importorder] || thanks for your contribution!what @stefan-kolb is telling you that the tests are currently failing as you do not respect the order of the import we defined in your changed classesplease check  and/or run `gradlew eclipse` to adjust the settings of intellij/eclipse to order the imports correctly || thanks @stefan-kolb and @matthiasgeiger i forgot to run the checks before submitting || no worries @shitikanth üòÑ these check style things are a little bit nitpicky üòâ,matcheshighlighter doensnt respect html,`netsfjabreflogicsearchmatcheshighlighter#highlightwordswithhtml` doesnt respect existing htmlits clearly visible in the preview panel- if you use the preview style have `br` in your entry and search for it:   ![html_preview]( if you use citationstyle and search for `<`  ![html_citationstyle](https://cloudentcom/assets/15333371/19156086/f1b01058-8be0-11e6-8977-b75dddd7ad13png),,1.0,0.0,do not highlight if showing error message:# please enter the commit message for your changes lines starting,|| does it make sense to set the highlight pattern automatically as a last step in `setpreviewlabel` ? || in some cases we may want to set a preview label but not want it to be search highlighted for example when csl preview is being loaded or if the csl preview generation failed and we are displaying an error message || ok thanks for the follow-up i merged your pr now,0,0,0,0
2169,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,fix failing ads test,added missing fields  2168,,2168,fix failing ads test,added missing fields 2168,|| `#10` are really strange field values but this is a discussion for a post cleanup for now this hotfix is good,ads fetcher (test) fails,latest dev version  what i see the entry returned from the fetcher contains the field    `eid  {#10}````javalangassertionerror: expected:<optional[@article{2012lrr1510f  archiveprefix  {arxiv}  author  {famaey b and mcgaugh s s}  doi  {1012942/lrr-2012-10}  eprint  {11123960}  journal  {living reviews in relativity}  keywords  {astronomical observations newtonian limit equations of motion extragalactic astronomy cosmology theories of gravity fundamental physics astrophysics}  month  {#sep#}  title  {modified newtonian dynamics (mond): observational phenomenology and relativistic extensions}  volume  {15}  year  {2012}}]> but was:<optional[@article{2012lrr1510f  archiveprefix  {arxiv}  author  {famaey b and mcgaugh s s}  doi  {1012942/lrr-2012-10}  eid  {#10}  eprint  {11123960}  journal  {living reviews in relativity}  keywords  {astronomical observations newtonian limit equations of motion extragalactic astronomy cosmology theories of gravity fundamental physics astrophysics}  month  {#sep#}  pages  {#10}  title  {modified newtonian dynamics (mond): observational phenomenology and relativistic extensions}  volume  {15}  year  {2012}}]>    at orgjunitassertfail(assertjava:88)    at orgjunitassertfailnotequals(assertjava:834)    at orgjunitassertassertequals(assertjava:118)    at orgjunitassertassertequals(assertjava:144)    at netsfjabreflogicimporterfetcherastrophysicsdatasystemtesttestperformsearchbyfamaeymcgaughentry(astrophysicsdatasystemtestjava:161)```,|| should we separate the fetcher tests from the normal tests? similar to thedatabase and integration tests? this would enable a separation and keepavoid failing tests being unrelated to a certain pr,1.0,0.0,fix failing ads test2168,,0,0,0,0
2179,1.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,clear bibtexkey exception,2177. nullpointerexception caused by clearing bibtexkey field in entry editor. -   -   -   () -  -   ( []( -  if you changed the localization: did you run  gradle ate ?,,2177,clear bibtexkey exception,2177 nullpointerexception caused by clearing bibtexkey field in entry editor-  change in changelogmd described-  -   ()-  manually tested changed features in running jabref-   ( [helpjabreforg](  if you changed the localization: did you run `gradle ate`?,|| the version 36 does not have exactly the same bug but the old code was also buggy because in a short test i run in severe freezes ive removed changelog entry,clear bibtexkey nullpointerexception,jabref 37dev--snapshot--2016-10-18--master--8f7ae51windows 10 100 amd64 java 180_101steps to reproduce:1 entry editor > clear field bibtexkey2 save database3 nullpointerexception```[awt-eventqueue-0] error netsfjabrefguibasepanel - runcommand error: field value must not be nulljavalangnullpointerexception: field value must not be null    at javautilobjectsrequirenonnull(objectsjava:228) ~[?:180_101]    at netsfjabrefmodelentrybibentrysetfield(bibentryjava:416) ~[jabref-37dev--snapshot--2016-10-18--master--8f7ae51jar:?]    at netsfjabrefmodelentrybibentrysetfield(bibentryjava:457) ~[jabref-37dev--snapshot--2016-10-18--master--8f7ae51jar:?]    at netsfjabrefmodelentrybibentrysetcitekey(bibentryjava:200) ~[jabref-37dev--snapshot--2016-10-18--master--8f7ae51jar:?]    at netsfjabrefguientryeditorentryeditor$storefieldactionactionperformed(entryeditorjava:1126) ~[jabref-37dev--snapshot--2016-10-18--master--8f7ae51jar:?]    at netsfjabrefguientryeditorentryeditorstorecurrentedit(entryeditorjava:704) ~[jabref-37dev--snapshot--2016-10-18--master--8f7ae51jar:?]    at netsfjabrefguibasepanelstorecurrentedit(basepaneljava:1780) ~[jabref-37dev--snapshot--2016-10-18--master--8f7ae51jar:?]    at netsfjabrefguiexportersavedatabaseactionrun(savedatabaseactionjava:121) ~[jabref-37dev--snapshot--2016-10-18--master--8f7ae51jar:?]    at sunreflectnativemethodaccessorimplinvoke0(native method) ~[?:180_101]    at sunreflectnativemethodaccessorimplinvoke(nativemethodaccessorimpljava:62) ~[?:180_101]    at sunreflectdelegatingmethodaccessorimplinvoke(delegatingmethodaccessorimpljava:43) ~[?:180_101]    at javalangreflectmethodinvoke(methodjava:498) ~[?:180_101]    at spininvocationevaluate(invocationjava:175) ~[jabref-37dev--snapshot--2016-10-18--master--8f7ae51jar:?]    at spinoffspinoffevaluator$1run(spinoffevaluatorjava:108) ~[jabref-37dev--snapshot--2016-10-18--master--8f7ae51jar:?]```> findbugs reports: entryeditorjava:1108 nullcheck of newvalue at line 1110 of value previously dereferenced in netsfjabrefguientryeditorentryeditor$storefieldactionactionperformed(actionevent) [scary(9) high confidence],|| another related bug which is more visible to the end usersteps to reproduce:1 open database2 edit some field for an entry3 open another entry and clear its bibtexkey4 save database5 quit jabref (by pressing ctrl-q or from the menu) and select discard changes when prompted![jabref waiting for save operation to finish](https://cloudentcom/assets/544054/19501176/61b5de02-9571-11e6-8adf-14efd6a59ae3png),1.0,0.0,code style,|| is this bug already present in version 36? if not then please remove the changelog entry since in the changelog we only want to state what changed relative to the previously released version || reformat to `} else {`on one line please || @jabref/developers can we make this more robust by handling the null value and clearing of the key inside the `setcitekey()` method? like:``` javasetcitekey(key) {if (key  null) {clearcitekey(key)} else {}```but maybe this is might mask programming faults then when not intentionally passing null to setcitekey,0,0,0,0
2211,1.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,prevent the search to get focus when deleting/pasting an entry,fixes: #2208  when you delete an entry the focus will no longer jump to the searchbar  instead it will select the next entry (also counts for pasting).,,2208,prevent the search to get focus when deleting/pasting an entry,fixes: #2208when you delete an entry the focus will no longer jump to the searchbar instead it will select the next entry (also counts for pasting),|| now it works for cutting entries tooi removed the code duplicate although im not sure about the the pattern (not able to use `runcommand(actionsdelete)`) || to me code looks good :+2:,move default focus from search to main table for better handling of pasting entries,very annoying in current master:create some entriesdelete one entrycursors moves to seach fieldpaste an entry from clipboard (bibtex code)entry code appears in search field,|| @bartsch-dev could you have a look? üòá,1.0,0.0,change the condition,|| either you change the condition and put cut instead of not cut or you wrap it in if and else || why did you change this? || the new editor was only needed if the condition was met and previously the focus was possibly set to the wrong editor (if the condition wasnt met)  || i changed it to cut (but didnt change the semantic),0,0,0,0
2226,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,fix for #2218: reenable ads fetcher,(see #2218)  fetcher is now working again  - ~~ ~~ affected search based fetcher still unreleased -  tests ~~created for changes~~ pass again - ~~  ()~~ -  - ~~  ( []( - ~~ if you changed the localization: did you run  gradle ate ?~~,,2218,fix for #2218: reenable ads fetcher,(see #2218)fetcher is now working again- ~~ change in changelogmd described~~ affected search based fetcher still unreleased-  tests ~~created for changes~~ pass again- ~~  ()~~-  manually tested changed features in running jabref- ~~  ( [helpjabreforg]( ~~ if you changed the localization: did you run `gradle ate`?~~,,astrophysics data system fetcher broken,it seems that our implementation of the astrophysics data system fetcher is brokenwe are getting a 503 service unavailable error although the service is well up and running i can reproduce the error locally and also travis gets it which breakes the master build the urls mentioned in the tests can be accessed when copying them into the browser and visiting the entry manually maybe this is some bot-detection defense on their sidei turned of the failing tests in master with 573328c7bd12c93dd37109852e3ac3732f1d7598 so that we have a working master again the commit can be reverted once we have a working fetcher againhere comes an excerpt of the travis build```netsfjabreflogicimporterfetcherastrophysicsdatasystemtest > testperformsearchbyxiongsunentry failed    netsfjabreflogicimporterfetcherexception: an i/o exception occurred        at netsfjabreflogicimporteridbasedparserfetcherperformsearchbyid(idbasedparserfetcherjava:85)        at netsfjabreflogicimporterfetcherastrophysicsdatasystemtesttestperformsearchbyxiongsunentry(astrophysicsdatasystemtestjava:187)        caused by:        javaioioexception: server returned  response code: 503 for url:             at sunnetwwwprotocol            at sunnetwwwprotocol            at javaneturlopenstream(urljava:1045)            at netsfjabreflogicimporteridbasedparserfetcherperformsearchbyid(idbasedparserfetcherjava:63)             1 more```,|| potential quickfix: user agent? || maybe you can go ahead and try! || not from my smartphone :wink:,1.0,0.0,use urlconnection with user agent - 2218,|| should we use mozilla as agent for all fetcher?,0,0,0,0
2229,1.0,0.0,0.0,1.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,fix medline fetcher by using https,fix for #2228    -   -   ( []( -  write blog post regarding  after november 9  2016  ncbi  servers will redirect or reject all  requests.,,2228,fix medline fetcher by using https,fix for #2228 -  change in changelogmd described-   ( [helpjabreforg](  write blog post regarding  november 9 2016 ncbi  servers will redirect or reject all  requests,,fetching from medline no longer works as  is enforced,see this issue for details:https://githubcom/jabref/helpjabreforg/issues/130,|| was about to fix that too -)changing the urls in `medlinefetcherjava` is sufficientplease also provide a changelog entry as this change will break previous jabref versionsmore information at pubmed:  || we should also make an announcement since: > after november 9 2016 ncbi  servers will redirect or reject all  requestshttps://wwwncbinlmnihgov/home/develop/https-guidanceshtml,1.0,0.0,fix medline fetcher by using https,,0,0,0,0
2400,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2394 groups matching with brackets in name,2394.  -   -   -   () -  -   ( []( -  if you changed the localization: did you run  gradle ate ?,,2394,2394 groups matching with brackets in name,2394-  change in changelogmd described-  -   ()-  manually tested changed features in running jabref-   ( [helpjabreforg](  if you changed the localization: did you run `gradle ate`?,,group names including brackets and spaces do not filter group anymore in v38,in version 37 is organized static groups with names like:[a] group1     [aa] subgroup1     [bb] subgroup2[b] group2     [aa] subgroup1     [bb] subgroup2the letters in brackets are part of the group or subgroup name i use this to achieve alphabetical ordering of my groups this worked fine in v37in version 38 names of groups/subgroups that contain brackets and spaces do not work anymore clicking on the subgroup names does not filter the group members this happens under windows 7 as well as under ubuntu 1604,|| thanks for reporting this issue it should be fixed in the latest development version could you please check the build from  thanks! || thanks works perfectly,1.0,0.0,fix groups matching with brackets in name,,0,0,0,0
2554,1.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,replaced lrumap with a guava cache,this is intended as a fix for #2546.  note that the guava caches would allow for automated reloading of the entries  but this is not undertaken in this implementation. instead everything should work as before with the lrumap.  -   -   -  -   ( []()?),,2546,replaced lrumap with a guava cache,this is intended as a fix for #2546note that the guava caches would allow for automated reloading of the entries but this is not undertaken in this implementation instead everything should work as before with the lrumap-  change in changelogmd described-  -  manually tested changed features in running jabref-   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),|| thanks ‚ù§Ô∏è can you please also change the external-librariestxt and remove commons from there?   || also small issues:```checkstylemain[ant:checkstyle] [error] /home/travis/build/jabref/jabref/src/main/java/net/sf/jabref/logic/pdf/fileannotationcachejava:6: wrong order for netsfjabrefmodeldatabasebibdatabasecontext import [importorder][ant:checkstyle] [error] /home/travis/build/jabref/jabref/src/main/java/net/sf/jabref/logic/pdf/fileannotationcachejava:10: wrong order for javautilhashmap import [importorder]``` || checkstyle help:  || thanks for the feedback there is quite a potential to improve stuff with these caches maybe ill have a look at the big picture there later,replace commons collections by google guava,we currently use both apache commons collections and google guava google guava is seen as the replacement of commons collections at the moment only a single class namely lrumap is used from the commons collections package this should be replaced with the corresponding google guava cachethis is a good start for someone who wants to start helping jabref! :),|| this can be closed now fixed in #2554,1.0,0.0,changed signature of the fileannotationcache constructor fixed import ordering,|| you may remove this line,0,0,0,0
2614,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,cleanup window has a scrollbar now.,fix for issue #2501.  -   -   -   () -  -   ( []( -  if you changed the localization: did you run  gradle ate ?,,2501,cleanup window has a scrollbar now,fix for issue #2501-  change in changelogmd described-  -   ()-  manually tested changed features in running jabref-   ( [helpjabreforg](  if you changed the localization: did you run `gradle ate`?,|| it should be fixed now || thanks again for your contribution!ill merge this in as the failing google scholar tests are not related to your changes,cleanup window: no possibility to resize,jabref > 37 (including  jabref-400-dev--snapshot--2017-01-29--masr--7191a7055jar)on linux lmde betsythe cleanup window cannot be resized which makes impossible to add a custom field formattersee picture![cleanup-noresize](https://cloudentcom/assets/6931104/22422727/3db90848-e6ee-11e6-8166-eb91cfdeab79png),|| i tried to fix the layout stuff in #2415 i could not really test it so i would ask you to test that version  as soon as the tests run through  || no resize for cleanup window using ````jabref-400-dev--snapshot--2017-02-03--movefiledir--07a1c4477jar```` || this has been fixed with #2614 - and is now included in the dev builds,1.0,0.0,fix checkstyle issue,|| it is probably better to return `scrollpane` in `getpanel` instead of introducing this new getter || the current code only contains getscrollpane() as i removed getpanel() i decided against returning a scrollpane in getpanel because it makes more sense to name the method getscrollpane imho is this okay with you?,0,0,0,0
2661,1.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,add possibility to clear the log at runtime,2660  @tobiasdiez the dialog is not modal  but does not update itself when new events arrive  i.e.  needs to be closed and opened again to see new events. is this expected? can we fix this?,,2660,add possibility to clear the log at runtime,2660@tobiasdiez the dialog is not modal but does not update itself when new events arrive ie needs to be closed and opened again to see new events is this expected? can we fix this?,|| yeah @stefan-kolb is now an active javafx developer üòº  code looks good so ill merge this actually new logs should be displayed automatically in the console (this is why it is modal) - thus this is probably a bug (can you please open a new issue i dont have time right now to further investigate this thanks),add an option to clear the log inside the error console,in order to reproduce issues without restarting jabref,,1.0,0.0,2660 add possibility to clear the log at runtime,,0,0,0,0
2711,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,avoid conversion of single underscores,2664  single underscores that are not followed by  {  are not converted to unicode during the latex to unicode conversion. this is not actually correct according to the rules of latex  but seems to be an important exception required by our users.  this is achieved by the following:  1. replace all single underscores with  jabrefunderscore   2. do the unicode conversion  3. replace  jabrefunderscore  with an underscore  todo: we should find a better magic word instead of  jabrefunderscore   because every character will be processed by latex2unicode and that costs performance. however  it should still be long and unique enough so that we avoid accidental conversions. suggestions anyone?  -   -   -  manually tested changed features in running jabref,,2664,avoid conversion of single underscores,2664single underscores that are not followed by `{` are not converted to unicode during the latex to unicode conversion this is not actually correct according to the rules of latex but seems to be an important exception required by our usersthis is achieved by the following: 1 replace all single underscores with `jabrefunderscore` 2 do the unicode conversion 3 replace `jabrefunderscore` with an underscoretodo: we should find a better magic word instead of `jabrefunderscore` because every character will be processed by latex2unicode and that costs performance however it should still be long and unique enough so that we avoid accidental conversions suggestions anyone?-  change in changelogmd described-  -  manually tested changed features in running jabref,|| what about the unicode replacement char? || excellent idea @siedlerchr i have implemented this using the replacement char (and it still works) || as discussed in the devcall: this can be merged aber fixing checkstyle,latex2unicode formatter: captial letters after an underscore are wrapped in braces,while checking the problem with the underscores in the groups from  #2599 i noticed its a problem of the latex2unicode formatter:  create a new entry with title `underscore_underscore`savein the main table the entry is shown as `underscore_(u)nderscore`,|| is it possible to file an issue at  || hmm i think the behavior of determining subscript is consistent with latex (although if not in the math environment a compile error would be thrown) in other words i guess latex2unicode is doing its job as intended?maybe jabref can add some extra logic to determine when latex2unicode should kick in? || when interpreting `_` with latex the `_` command is a command stating that the following character should be go to subscript if one does not want that one has to load the [underscore]( package see  jabref should escape the underscore when doing the conversion (this assumes that the user loads the underscore package)? or warn the user?  || solution idea: `_` is only converted if followed by `_{} ` - idea: replace _ by arbitrarystring then convert to unicode and then convert back || @tomtung probably in `text_u` the `u` should be converted to subscript letter in unicode and show it as text·µ§ || @tobiasdiez yeah thats the current behavior also i use `_(whatever)` to represent subscript when there are no corresponding unicode subscript characters available,1.0,0.0,remove unused import,|| typo: to latex during the latex to unicode cconversion ) || can you please split the test into two tests and convert your comments into nice test names üò∏  || fixed || of course i can -),0,0,0,0
2816,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2806: date editor also accepts incomplete dates,   --> should fix  and   -   -   -   () -  -   ( []( -  if you changed the localization: did you run  gradle ate ?,,2806,2806: date editor also accepts incomplete dates,   -->should fix  and   change in changelogmd described-  -   ()-  manually tested changed features in running jabref-   ( [helpjabreforg](  if you changed the localization: did you run `gradle ate`?,,400 entry editor rework  - not possible to enter date manually,enter 2011 in the date field click save or enter other field-> date information is gone enter date in the bibtex code as `date  {2011} ` the correct year is shown in the date-field try to modify it eg to 2012 -> date information is gone in some cases the date information is deleted from the bibtex code as well@tobiasdiez  sounds to me as if there is something wrong with the databinding,,1.0,0.0,remove empty line,,0,0,0,0
2891,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,adjust tests: ads fetcher returns url  dblp no longer works with negative operators,#2890  internal change only  some adjusted tests,,2890,adjust tests: ads fetcher returns url dblp no longer works with negative operators,#2890internal change only some adjusted tests,,dblp fetcher negative operators do no longer work (server side issue),> update may 7 2017: please note that we had to disable the phrase search operator () and the boolean not operator (-) due to technical problems for the time being phrase search queries will yield regular prefix search result and search terms preceded by a minus will be interpreted as regular (positive) search termshttp://dblpuni-trierde/search,|| fixed in https://githubcom/jabref/jabref/pull/2891,1.0,0.0,fetcher returns new keyword for math sci net entry,,0,0,0,0
2921,1.0,0.0,0.0,1.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2854: readd context menu to linked files editor,   -->  this was the last feature missing from the old file list editor. the old class could thus be deleted.  -   -   -   () -  -   ( []( -  if you changed the localization: did you run  gradle ate ?,,2854,2854: readd context menu to linked files editor,   -->this was the last feature missing from the old file list editor the old class could thus be deleted-  change in changelogmd described-  -   ()-  manually tested changed features in running jabref-   ( [helpjabreforg](  if you changed the localization: did you run `gradle ate`?,|| codewise looks good but you do have an architectural violatin your model class depends on gui:` import orgjabrefguiexternalfiletypeexternalfiletype `and i tested it locally apart fromt he keybindings problem it works but i found one bugi can not delete a file entry which has no underlying file just add this line in your bibdatabase and try to delete the entry then:```file {:kitamura2009 - a supporting tool for requirements elicitation using a domain ontologypdf:pdf}```it gives you an error message file not found,no context menu for file table in general tab,context menu is missing to delete assignment files open files(https://cloudentcom/assets/2141507/26243450/346aa280-3c8c-11e7-9956-7bb6ad2d15f8png),|| the filelisteditor needs to be apdated to javafx,1.0,0.0,fix small bug,,0,0,0,0
2972,1.0,0.0,0.0,1.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,add remove link context menu entry in file editor,   -->   fix for #2968  (  -   -   -   () -  -   ( []( -  if you changed the localization: did you run  gradle ate ?,,2968,add remove link context menu entry in file editor,   -->fix for #2968 (  change in changelogmd described-  -   ()-  manually tested changed features in running jabref-   ( [helpjabreforg](  if you changed the localization: did you run `gradle ate`?,,add menu option to remove link to a file,![selection_081]( remove link to file to context menu,|| thank you for reporting this issue we think that is already fixed in our development version and consequently the change will be included in the next releasewe would like to ask you to use a development build from  and report back if it works for you,1.0,0.0,add remove link context menu entry in file editor,|| i think it also makes sense to enable it for online links,0,0,0,0
2995,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,less backups,addresses #2993  the frequent events are due to the bidirectional binding which transfers every change directly into the bibentry. if we want fewer events  the only solution will probably be to break the binding  which would be very disappointing for the javafx implementation. in my point of view the problem is not on the side of event creation. after all  every change should trigger an event and javafx triggers many changes. imho  this should be fixed in how we react to events.  i also noticed the exception  but do not get a dialog. this seems to happen because of the save operation invoked by the backup.  a solution might be to do less backups  by:  1. doing backups only every x events and not for every event  2. ignoring fieldchangeevents in the backup  3. adding the size of the field change in the fieldchangeevent class  so that you can ignore it if only 1 character changed.  this pr combines options 1. and 3.  i.e.: the backup manager ignores events that are very minor and only does a backup if enough of them have happened (currently set to five).  what do you think?   -   -   -   () -  -   ( []( -  if you changed the localization: did you run  gradle ate ?,,2993,less backups,addresses #2993the frequent events are due to the bidirectional binding which transfers every change directly into the bibentry if we want fewer events the only solution will probably be to break the binding which would be very disappointing for the javafx implementation in my point of view the problem is not on the side of event creation after all every change should trigger an event and javafx triggers many changes imho this should be fixed in how we react to eventsi also noticed the exception but do not get a dialog this seems to happen because of the save operation invoked by the backupa solution might be to do less backups by: 1 doing backups only every x events and not for every event 2 ignoring fieldchangeevents in the backup 3 adding the size of the field change in the fieldchangeevent class so that you can ignore it if only 1 character changedthis pr combines options 1 and 3 ie: the backup manager ignores events that are very minor and only does a backup if enough of them have happened (currently set to five)what do you think?-  change in changelogmd described-  -   ()-  manually tested changed features in running jabref-   ( [helpjabreforg](  if you changed the localization: did you run `gradle ate`?,,entry editor triggers db change events too often,already noticed that in my sharelatex integration stuff:the database changed event is triggered on every character insert enter some text in a field-> enter a brace  suddenly dialog about ummatched braces pops up click ok in the log you see a save exception about unmatched braces,|| fixed by #2995,1.0,0.0,one more try for fixing checkstyle,,0,0,0,0
2997,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,changes in the entry editor mark the database as dirty,partial fix to  #2787   changes in the entry editor now mark the database as dirty. this are somewhat proactive: even only opening the entry editor will mark the database as changed. i d say this isn t a problem. i d rather have it do the marking than forget one.  essentially  this adds another listener to the properties in the entry editor that propagates the change whenever the property changes. i haven t figured out how to do this for groups.  -   -   -   () -  -   ( []( -  if you changed the localization: did you run  gradle ate ?,,2787,changes in the entry editor mark the database as dirty,partial fix to  #2787 changes in the entry editor now mark the database as dirty this are somewhat proactive: even only opening the entry editor will mark the database as changed id say this isnt a problem id rather have it do the marking than forget oneessentially this adds another listener to the properties in the entry editor that propagates the change whenever the property changes i havent figured out how to do this for groups-  change in changelogmd described-  -   ()-  manually tested changed features in running jabref-   ( [helpjabreforg](  if you changed the localization: did you run `gradle ate`?,|| id say this is a hack whereas it is better than missing a changed state for now we should only mark the db as dirty if we really changed something || im also not very happy with this solution from an architectural view: why should the gui handle the dirty/clean state and not the logic? i would propose to add listeners to the database/metadata in `databasecontext` which sets a corresponding flag the ui can then listen to changes of this new property and display the star in the tab accordingly || the databasechangedevent is already realized with the eventbus system so it just needs a couple of listeners if i understand it correctly and one event bus can have multiple listeners for the same event || ok i see so far it had been implemented only in the basepanel but i aggree that the cleanest solution is probably to track it in the database itself this wont be as quick as the current solution though :)the consensus seems to be that we are not going in this direction so ill close this pr,changes to groups and edits in entry editor no longer mark database as dirty,for groups raised in  and also occurs in the current development build for changes in bibentries possible solution: main table should listen to changes to database + maintable (instead of the old push-notification),|| refs https://githubcom/jabref/jabref/issues/2946,1.0,0.0,fix checkstyle warning,,0,0,0,0
3007,1.0,0.0,0.0,1.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,add preference migration for keybdingings,fix for #2980       -->  -   -   -   () -  -   ( []( -  if you changed the localization: did you run  gradle ate ?,,2980,add preference migration for keybdingings,fix for #2980    -->-  change in changelogmd described-  -   ()-  manually tested changed features in running jabref-   ( [helpjabreforg](  if you changed the localization: did you run `gradle ate`?,,add preference migration for keybindings,at the moment the workaround is to either reset them or manually replace them in the prefs filemodifier(ctrl alt meta shift followed by white space must be replaced with modifier followed by plus sign)follow up from https://githubcom/jabref/jabref/pull/2971#issuecomment-313513136,|| preferencesmigrationsjava,1.0,0.0,add preference migration for keybdingings,,0,0,0,0
3092,1.0,0.0,0.0,1.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,fetcher timestamp,3074.,,3074,fetcher timestamp,3074,|| ok i tried to create a own preference class not sure if ive done that correctly (as intended at the moment) should i also replace calls to the preferences inside the general tab?,adding from doi does not generate timestamp,jabref version jabref 40-dev--snapshot--2017-08-03--master--e9fbf1963linux 440-21-generic amd64 java 180_144onubuntu 1404steps to reproduce:1 check on options --> preferences --> general --> mark new entries with addition datecheck on options --> preferences --> general --> overwritefield name: timestamp2 add an entry by doi i have tried several and the same behavior happens here is a sample: 101002/jae25573 entry is added but timestamp is not populatedi have confirmed that adding an entry manually still creates a timestamp,|| thank you for your report :+1:this should be fixed in current `master` please try the latest build from  || this should be fixed in the latest development version could you please check the build from  thanks! || i checked the latest master build and the behavior is as expected now thanks!,1.0,0.0,checkstyle is a pain in the ***,,0,0,0,0
3203,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,when groups are removed  also remove them from entries,3190  -   -   -   () -  -   ( []( -  if you changed the localization: did you run  gradle ate ?,,3190,when groups are removed also remove them from entries,3190-  change in changelogmd described-  -   ()-  manually tested changed features in running jabref-   ( [helpjabreforg](  if you changed the localization: did you run `gradle ate`?,|| ok i managed to get this done and i think ive addressed everything as the reviewers desired it can be merged from my point of view so please have a look and merge if you think it is ok || one more try :) now only explicitgroups are removed from entries keyword-based groups are kept i hope this is the last missing puzzle piece || sorry for being pestic but with this implementation keyword groups that are children of the deleted explicit group are still handled wrongly i directly committed a fix if you are fine with it you have my ok for mergeby the way in order to convince you about the testability of javafx code you are invited to write a test covering the new behavior üòà   || thanks challenge accepted :) i did not only add one test but threei will merge when the build goes through,deleting a group via groups interface does not remove that group reference from bibtex source,jabref 40-devlinux 440-92-generic amd64java 180_131steps to reproduce:1 open group interface (groups -> toggle groups interface)2 create a group3 add an item to the group4 right click on the group in the group interface -> remove group and subgroupsthe group gets removed but the reference to it in the bibtex source of each item that was in the group does not (ie groups  {abc})this causes an unstable state where jabref might freeze if you try adding that item to another group because of a null pointer [javafx application thread] error orgjabreffallbackexceptionhandler - uncaught exception occurred in thread[javafx application thread5main]javalangnullpointerexception: null,|| this is a bug it is reproducible while removing or changing group name from entry editor works fine but from groups menu it shows unexpected behaviour,1.0,0.0,add tests for removal changes,|| why do you catch a npe here? looks strange || i know for some reason this binding triggers a nullpointerexception when a group is removed even though there was a null check directly before i tried hard but i could not pin down the actual cause of this (or which object actually is null) the debugger is really of no use with lambdas and bindings but look at the complete code change in this class its just a different way of doing the same thing with a null checkapart from that the npe doesnt have any effect the removal works anyway and the selection is cleared all that this line does is to avoid a stack trace in the logi can offer to add a code comment explaining this but i dont have more time to investigate why this is triggered (spent enough on that already) so its either this solution or a stack trace in the log || okay add a comment and i am fine not the best idea yeah but i know how hard it is do debug binding lamdba stuff || okay i took the time to rewrite that part in an imperative fashion track down the bug and fix it properly it is totally insane `list<treeitem<groupnodeviewmodel>> newselectedgroups` is a list that can actually contain `null` values when you iterate over that list in an absolutely standard fashion eg `for (treeitem<groupnodeviewmodel> model : newselectedgroups) {` than `model` can actually be nullif thats not a violation of the basic contract of how collections work in java then i dont know what would be || this is really odd || the npe is valid in the for each loop it does not check against null it only skips the loop if the list is empty so this is more of a design issue that the treeitem could be null at one poin || interesting thanks :) you never finish learning about even the most basic aspects of the languageanyway the code avoids the npe now through proper checking so this pr should be ready to go  || with these changes i think the `updateviewmodel` consumer can be replaced by `this::updateselection` (or whatever the exact syntax is for these generics) || i prefer the condensed 1-line form for javafx classes since these @fxml and @inject tags make the code rather clumsy but both forms are fine with me (we should just stick to one convention) || the groupstreenode class already contains the `getmatchinggroups` method  which slightly differs from this code here but is very similar in its purpose (its also matches dynamics and search groups) thus i would propose to move the new code to a new method `grouptreenode::getmatchingexplicitgroups` moreover please reuse `explicitgroup:contains`  for the group membership check || this was done by the intellij autoformat function ill gladly change it back || ok ill have a check and see what i can do || ok thanks ill look into these things i added this method basically because im not at all an expert in the group code and didnt know about these methods || done || moved and refactored i kept the method name though || you need to check if the `group` is an explicit group otherwise removing a dynamic keyword-based group also removes the keyword from the entries that are matched by this group - this behavior is probably not what we want || ok thanks for clarifying but then what do i do if it is a dynamic keyword group? no removal at all? || yes i would just ignore every other type of group but the explicit group (or ask the user for confirmation for the removal) || ok done!,0,0,0,0
3211,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,added logic to check whether linked file already exists,#3172  added a check in linkedfileviewmodel.rename() to see if a file which is being renamed already exists in the target location. if such a file is found then an error popup displays informing the user of the conflict. user will be prompted to choose whether to overwrite or cancel.  also see #3188 for additional details.,,3172,added logic to check whether linked file already exists,#3172 added a check in linkedfileviewmodelrename() to see if a file which isbeing renamed already exists in the target location if such a file isfound then an error popup displays informing the user of the conflictuser will be prompted to choose whether to overwrite or cancelalso see #3188 for additional details,|| this work fine and includes all the requested changes from the previous pull request with one caveat  if the file being overridden is related to a different entry and has different case such as entry 1  [abc] renamed to [def] entry 2  [def] then the 2nd entry file association will target a now non-existing file  its possible to get around this by searching the database for any entries that have the old filename [def] and changing the association to the new filename but i dont know if thats something desireable so i decided to push this as is for now || ok i changed to an optional and removed !filesexists(targetfilepath) as its redundant  im still getting the hang of git and egit so hopefully the merge didnt mess anything up || @andrew-lev  i stick to git and git gui from command line a lot easier than struggling with the eclipse git client  || thanks this looks really good now!,rename file fails silently,renaming a linked file fails if there already exists a file with the namein the general tab of the entry editor: right click on the linked file -> rename file a popup that states the new file name appears confirming it results in a failure without any message the other file is not overwritten and the operation apparently has no effecti would expect that a popup message appears and asks to user to confirm the overwritejabref 40-devmac os x 10126 x86_64 java 180_144,|| have a look at ```public class linkedfileviewmodel extends abstractviewmodel { public void rename() { ``` || it sounds like adding a check for existing files in that directory with the targetfilename and then showing the error dialog would take care of this  i can fix this fairly quickly want me to work on it? || didnt take very long at all actually![samefilenameerror]( || yeah cool stuff! just open the pr and well have a look at it! || fixed in #3211 thanks @andrew-lev!,1.0,0.0,put in null return,|| please use [optional<path>]( as a return type and return an empty optional here instead of  `null` || findfirst also returns an optional so you could just forward that one from here  || and here you can then check the above optional with ispresent and avoid the null  || here you have two unchecked calls for optionalget() will they always succeed? if so can you please comment in the code why this is so? otherwise please add some error handling || please reformat the code```/*** check to see* */``` || this is maybe a bit nitpicky: think of a more intuitive name for the method that reflects the return type `filealreadyexists` sounds to me like it would return a boolean how about `findexistingfile` or something similar? || you could reduce code-duplication by extracting this method call into a private method,0,0,0,0
3248,1.0,0.0,0.0,1.0,0.0,1.0,0.0,1.0,1.0,1.0,0.0,1.0,0.0,1.0,0.0,0.0,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,fix for issue 2811: bibtexkey generator does not use crossref information,see #2811  the bibtex key generator now uses crossreferenced entries if required fields are empty.  -   -   -  -   ( []()?),,2811,fix for issue 2811: bibtexkey generator does not use crossref information,see #2811 the bibtex key generator now uses crossreferenced entries if required fields are empty-  change in changelogmd described-  -  manually tested changed features in running jabref-   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),|| @125m125 that is really an impressive amount of tests good job!there are two merge conflicts could you resolve those? once thats done this pr is ready to go into master || and once again thanks!,bibtexkey generator does not use crossref information,jabref 400-dev--snapshot--2017-05-01--master--fcac52707linux 41012-200fc25x86_64 amd64 java 180_131it seems to me that the bibtex key generator does not use cross ref information,|| fixed by #3248,1.0,0.0,merge branch master into fix-for-issue-2811,|| seems like you have forgotten to remove the system out print here || please construct the entry by hand (as you did for `entry1`) instead of using the parser i know the other tests also work like that but this is bad design,0,0,0,0
3325,1.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3292: annotations are now automatically refreshed,   -->  this pr aims to 3292 by removing the refresh button completely and monitoring the pdf files automatically for changes. in the progress of the implementation a few refactorings were made:  - extract the file monitoring functionality from  fileupdatemonitor  to a new class and convert the timestamp-based method to the new nio watcher interface. - extract the conflict handling code by external bib file changes from the base panel to a new class  databasechangemonitor   where also some of the old code from  fileupdatemonitor  now finds a new home. this class is still a bit ugly but in my opinion better than before. i hope that the conflict handling still works as expected. i tested it but might have missed some special cases/configurations.  -----  -   -   -   () -  -   ( []( -  if you changed the localization: did you run  gradle ate ?,,3292,3292: annotations are now automatically refreshed,   -->this pr aims to 3292 by removing the refresh button completely and monitoring the pdf files automatically for changes in the progress of the implementation a few refactorings were made:- extract the file monitoring functionality from `fileupdatemonitor` to a new class and convert the timestamp-based method to the new nio watcher interface- extract the conflict handling code by external bib file changes from the base panel to a new class `databasechangemonitor` where also some of the old code from `fileupdatemonitor` now finds a new home this class is still a bit ugly but in my opinion better than before i hope that the conflict handling still works as expected i tested it but might have missed some special cases/configurations------  change in changelogmd described-  -   ()-  manually tested changed features in running jabref-   ( [helpjabreforg](  if you changed the localization: did you run `gradle ate`?,|| the changes are a bit hard to review but i have tested it locally and the annotations are refreshed as desiredi have another point though one that might entail some work since you are already touching this code do you see a change of refactoring the complete `collab` package so that it fits better to our architecture? if we just take the current dependencies in the package then the whole thing would basically go into gui this already would be an improvement because the source code packages in root would already look a little more like where we want to gobut to be honest i do not get why file monitoring functionality should belong into the gui part at least part of that should be extractable into a non-gui part and should be movable into logic if i look at `changescanner` then basically everything from line 164 downwards is gui-independent code  i also dont see why `change` and its subclasses should be so heavily tied to ui code as far as i can see this is only because the code is tied so strongly to the undo framework couldnt we extract that part and move the `change` classes to a deeper layer? || ok ill merge this now and will have a look at the collab package later i second your concerns @lenhard much of the code their should actually reside in logic this would also help @siedlerchr in his endeavor towards sharelatex integration,refresh button in file annotations tab does not refresh the contents,( to close entry editor first or afterwards,,1.0,0.0,update basepaneljava,,0,0,0,0
3388,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,added checking integrity dialog,this change is related to #3358. jabref looked like it is hanging during long integrity checks. i added a dialog with a progress bar to show that it is working.  ![checkingintegrity](  -   -   -   () -  -   ( []( -  if you changed the localization: did you run  gradle ate ?,,3358,added checking integrity dialog,this change is related to #3358 jabref looked like it is hanging during long integrity checks i added a dialog with a progress bar to show that it is working![checkingintegrity](  change in changelogmd described-  -   ()-  manually tested changed features in running jabref-   ( [helpjabreforg](  if you changed the localization: did you run `gradle ate`?,|| thanks for fast response i fixed the problems || thanks for your contribution! i tested the changes locally and it works fine! feel free to look at other issues as well!,check integrity status,using 41dev 25 oct java 180_152 linux x86_64when you choose to check integrity of a relatively large bib file (about 2000 entries) jabref appears likeit is hanging but after waiting for 30 seconds the check integrity window pops up if i remember correctlyin the past there was a little message counter on the lower left border showing the progress of the checkwithout this the feeling is like it is hanging since no mouse action works during this time it would be niceto have that working message again,,1.0,0.0,added localization fixed styling,|| you somehwere have a checkstyle error here:`checkstylemain[ant:checkstyle] [error] /home/travis/build/jabref/jabref/src/main/java/org/jabref/gui/actions/integritycheckactionjava:8: javaxswingaction should be separated from previous imports [importorder]` failed || please use a localized message and add it to the l10n files  || if you use eclipse exeute /gradlew eclipse and it will import the correct settings for the checkstyle,0,0,0,0
3502,1.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,update user agent and change acm to https,fix acm fetcher 3500      -->   ----  -   -   -   () -  -   ( []( -  if you changed the localization: did you run  gradle ate ?,,3500,update user agent and change acm to https,fix acm fetcher3500    -->-----  change in changelogmd described-  -   ()-  manually tested changed features in running jabref-   ( [helpjabreforg](  if you changed the localization: did you run `gradle ate`?,|| hmmmm thats odd for me it worked will take a look at it || okay i tested things again and i cannnot reproduce your error works fine on my side || tested again still same error regardless of how i configure the fetcher in the uiit seems that someone else should be testing this as well || is this the right test setting? --> works here( || i get the same error on current master so this is probably unrelated to this pr seems what i get back from acm is chinese instead of a web page which probably means some encoding problem:![acm]( shouldnt block the current pr which i am merging now,importing from the acm digital library hangs after selection,<!-- note: please use the github issue tracker only for bugreports feature requests  questions and general feedback is now handled at  thanks! --> -  i have tested the latest master version from  and the problem persistsjabref version 41-dev--snapshot--2017-12-08--master--6f39151a7 linux 4130-17-generic amd64 java 180_121 on ubuntu 1710<!-- hint: if you use a development version (available at  ensure that you use the latest one -->steps to reproduce:1 search for a paper on the acm portal2 select to import one the returned entriesexpected result:entry appears in my bibliographyactual result:jabref hangs<!-- if applicable excerpt of the bibliography file screenshot and excerpt of log (available in the error console) --><details>  <summary>log file</summary>    ```  10:06:08970 [javafx application thread] error orgjabreffallbackexceptionhandler - uncaught exception occurred in thread[javafx application thread5main]javalangnullpointerexception: null             at orgjabrefguisearchglobalsearchbarlambda$new$5(globalsearchbarjava:196) ~[jabref--master--latestjar:?]        at comsunjavafxapplicationplatformimpllambda$null$173(platformimpljava:295) ~[jfxrtjar:?]        at javasecurityaccesscontrollerdoprivileged(native method) ~[?:180_121]        at comsunjavafxapplicationplatformimpllambda$runlater$174(platformimpljava:294) ~[jfxrtjar:?]        at comsunglassuiinvokelaterdispatcher$futurerun(invokelaterdispatcherjava:95) ~[jfxrtjar:?]        at comsunglassuigtkgtkapplication_runloop(native method) ~[jfxrtjar:?]        at comsunglassuigtkgtkapplicationlambda$null$49(gtkapplicationjava:139) ~[jfxrtjar:?]        at javalangthreadrun(threadjava:745) [?:180_121]                     file: grouptreefxml not found attempting with camel case                         file: grouptreecss not found attempting with camel case                          10:06:44558 [jabref cachedthreadpool] error orgjabreffallbackexceptionhandler - uncaught exception occurred in thread[jabref cachedthreadpool6main]javalangstringindexoutofboundsexception: string index out of range: -1                   at javalangstringsubstring(stringjava:1960) ~[?:180_121]                     at orgjabrefguiimporterfetcheracmportalfetcherdownloadentrybibtex(acmportalfetcherjava:325) ~[jabref--master--latestjar:?]        at orgjabrefguiimporterfetcheracmportalfetchergetentries(acmportalfetcherjava:181) ~[jabref--master--latestjar:?]        at orgjabrefguiimporterfetchergeneralfetcherlambda$actionperformed$2(generalfetcherjava:198) ~[jabref--master--latestjar:?]        at javautilconcurrentthreadpoolexecutorrunworker(threadpoolexecutorjava:1142) ~[?:180_121]        at javautilconcurrentthreadpoolexecutor$workerrun(threadpoolexecutorjava:617) ~[?:180_121]        at javalangthreadrun(threadjava:745) [?:180_121]  ```</details>,|| i can only reproduce the fetcher bug itself seems like there has been an update to the acm page  || the outdated jdk version could be part of the problem the latest development snapshot should display a warning that says that you need at least 180_144,1.0,0.0,fix npe when multiple entries are selected,,0,0,0,0
3506,1.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3359: automatically remove colon and apostrophe from key pattern,   -->  3359. colons and apostrophes are now removed from the generated key pattern. i also refactored the key generator  mainly converting the static methods to instance methods.  ----  -   -   -   () -  -   ( []( -  if you changed the localization: did you run  gradle ate ?,,3359,3359: automatically remove colon and apostrophe from key pattern,   -->3359 colons and apostrophes are now removed from the generated key patterni also refactored the key generator mainly converting the static methods to instance methods-----  change in changelogmd described-  -   ()-  manually tested changed features in running jabref-   ( [helpjabreforg](  if you changed the localization: did you run `gradle ate`?,|| @lenhard i manually tested most use cases where the code changes (except openoffice since i dont use it) what are our current plans for the 41 release? when do we want to release? if there is still some time before the release i would prefer if this pr is merged before the release  || you may want to add the percent sign and the ampersand (&) which is problematic as it creates a problem with biber/biblatex  || should this still go into 41? || @tobiasdiez when you fix the checkstyle issues and conflicts then this pr can be merged,key generator fails to parse colon,it seems that in 40 (mac version) when i customize the key generator to [author][year][veryshorttitle] the generated keys will include the trailing colon if there is one in the title it also includes other special characters like (`) i remember this wasnt the case in 36,|| could you please re-check the behavior with the most recent development version available here:  and report what you find?since the release of 40 there have been changes in the key generation which might also have affected this || sorry on my mac it says things like file damaged and should be moved to trash your faq says i can avoid this by changing the security setting to allow apps from anywhere but i dont have this option on my os (sierra 10126) || i can verify that this happens in the latest 11-13 build on windows:```jabref 41-dev--snapshot--2017-11-13--master--c1d425a31windows 10 100 amd64 java 180_152```not only the special characters like colon or ` are kept in the key phrase i also think it is not necessary to keep the curly brackets in the file name when the pdf file is downloaded from the fetcher automatically based on the bibtex information (the curly brackets are from the title entry in the bibtex code) but this could be a separate issue  || this should be fixed in the latest development version could you please check the build from  thanks!,1.0,0.0,merge,|| you should reeally extract this to a constant same with th e one abvoe,0,0,0,0
3539,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,fix options databinding by adding elements if they are not in the initial map,3538   i dunno if this is the best idea  but it works     ... -->   ----  -   -   -   () -  -   ( []( -  if you changed the localization: did you run  gradle ate ?,,3538,fix options databinding by adding elements if they are not in the initial map,3538 i dunno if this is the best idea but it works   -->-----  change in changelogmd described-  -   ()-  manually tested changed features in running jabref-   ( [helpjabreforg](  if you changed the localization: did you run `gradle ate`?,|| can you please explain the reason for the bug? in general the string converter should not modify the source or target map || the reason for the bug is that the fromstring method does a lookup in the map with the current txt in the field if you enter a non predefined string into it the map lookup returns null because not found,custom data in type field in techreport not stored,<!-- note: please use the github issue tracker only for bugreports feature requests  questions and general feedback is now handled at  thanks! --> originally reported in the forum:  i have tested the latest master version from  and the problem persists1 create a techreport entry2 enter a type eg mycustomtypeofreports3 move to other field -> content is gone i suspect that it is a simliar databinding issue in relation to the date field #3483,,1.0,0.0,make errorprone happy,|| ok thanks!according to the documentation> a string converter property is provided to allow for developers to specify how to translate a users string into an object of type t such that the value property may contain it by default the converter simply returns the string input as the user typed it which therefore assumes that the type of the editable combobox is stringso you are right that the string converter should return something non-null even when the text is not recognized however there is no need to add it to the item map moreover we need to handle the case when `t` is not a string type thus i would propose to create a new protected method that converts an unknown string to a `t` object if not overridden it should try to cast to `t` as in your code above (and throw an exception with details how to properly implement it if casting was not successful)  || i now added a method for checkingwe also need such kind for dates to allow custom values which we currently dont support all input in the field will be cleared if not parseable,0,0,0,0
3551,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,make path relative when adding automatically found file,3476     -->   ----  -   -   -   () -  -   ( []( -  if you changed the localization: did you run  gradle ate ?,,3476,make path relative when adding automatically found file,3476   -->-----  change in changelogmd described-  -   ()-  manually tested changed features in running jabref-   ( [helpjabreforg](  if you changed the localization: did you run `gradle ate`?,,automatically added file link has absolute instead of relative path,-  i have tested the latest master version from  and the problem persistsjabref 41-dev--snapshot--2017-11-30--master--d45d7ca38linux 3160-38-generic amd64 java 180_151on mint 17 (ubuntu 1404)steps to reproduce:1 import new entry2 add file with bibtex key into file directory3 open new entry in entry editori just switched from v40 to the latest development version because medline import did not work in v40 anymore unfortunately now files appear to be added with absolute paths to the library eg i added entry lake2016 and jabref now automatically adds the corresponding file as `/home/bitzer/papers/lake2016pdf` instead of as `lake2016pdf` as before so i have to manually edit the file link to get the relative path is that intended behaviour and how do i get jabref to automatically add relative links again?,|| hirelative links are created automatically and this depends on your settings there are 4 settings for files:1 checkbox: use bibfile as main file location -> overwrites all other settings2 main file directory globally in jabref valid for all files3 use and library setting in the properties of the bib file: here you can also enter relative pathso depending on your settings jabref will relatvize all paths against the first found file directory || hiall of these 3 were set in jabref 40 and are still set in the development version im using now (1 checked 2 set to `/home/bitzer/papers` and 3 set to `/home/bitzer/papers` too) still version 40 added relative paths while the development version adds absolute paths || is the location of the bibfile the same as /home/bitzer/papers? if not then uncheck the combobox || yes the bibfile is in /home/bitzer/papers itself also the issue persists in the newest version jabref-41-dev--snapshot--2017-12-08--master--6f39151a7jar || ah i now can reproduce your  behavior it is the auto link which adds it as absolute path if you manually select the file it is correct i will be working on a fix for this || cool thank you!,1.0,0.0,simplify test,|| well now the test uses the same logic as the method under test could you please hard code the expected value it should be just `citekeypdf` right?,0,0,0,0
3600,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,make it possible to disable autocompletion in the search bar,3598 by covering the autocompletion in the search bar with the same preference option as in the entry editor.    ----  -   -   -   () -  -   ( []( -  if you changed the localization: did you run  gradle ate ?,,3598,make it possible to disable autocompletion in the search bar,3598 by covering the autocompletion in the search bar with the same preference option as in the entry editor -----  change in changelogmd described-  -   ()-  manually tested changed features in running jabref-   ( [helpjabreforg](  if you changed the localization: did you run `gradle ate`?,,disable autocomplete in the search field,jabref version <41> on <linux 44103-1841-default amd64 java 180_151>if i start searching a database a drop-down menu appears below the search window although i have tried to globally disable autocomplete in the preferences shouldnt there be a way to totally disable this feature for each and every place where it might pop up?steps to reproduce:1 open an existing database2 begin typing into the search window3 unwanted drop-down menu appears,|| there is a preference option that you can set as part of the entry editor preferences which turns off the autocompletion there i think we should just extend the preference to capture the search box as well,1.0,0.0,remove unused import,,0,0,0,0
3670,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,3648: chained modifiers work again,   -->  3648.   the problem was that  resultinglabel = formatter.get().format(label)   always used the original input and not the result of the previous modifier.  ----  -   -   -   () -  -   ( []()?),,3648,3648: chained modifiers work again,   -->3648 the problem was that `resultinglabel  formatterget()format(label)` always used the original input and not the result of the previous modifier-----  change in changelogmd described-  -   ()-  manually tested changed features in running jabref-   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),,chaining of modifiers does not work (in all cases?),-  i have tested the latest master version from  and the problem persistsjabref version 41 on debian buster/sidsteps to reproduce:1 chain modifiers for the bibtex key generator [as described in the docs]( have a bibtex file where both modifiers would have an effect3 observe that only the last modifier will be applied<details>despite the configured pattern `[auth:(_):lower][veryshorttitle:lower:(_)]`  the example bibtex:```@article{interesting  title      {the interesting title}}```leads to the bibtex key as seen aboveexpected key (and bibtex again):```@article{_interesting  title      {the interesting title}}```</details>thanks for this powerful piece of floss!,|| great thank you very much @tobiasdiez !,1.0,0.0,3648: chained modifiers work again,,0,0,0,0
3709,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,group separator escaping,3646,,364,group separator escaping,3646,,save custom entry types in bib file,definitions should be stored in database to be portable (so that another user can open this and does not convert the entries into @other,|| duplicate of #365,1.0,0.0,add test for hierarchical delimiter escaping,,0,0,0,0
3766,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,update architecture tests to catch static imports,fixes a part of #2617  updates the architecture tests to junit5 and also catches violations in static imports now. i tested this by adding a static import and checking that the build breaks. it does  but of course i had to remove the cause again.  ----  -   -   -  -   () -  ( -   ( []()?),,2617,update architecture tests to catch static imports,fixes a part of #2617updates the architecture tests to junit5 and also catches violations in static imports now i tested this by adding a static import and checking that the build breaks it does but of course i had to remove the cause again-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),,improve architecture tests,i just noticed that our architecture tests currently do not cover static imports and therefore are missing at least one dependency that we want to forbidthe class `orgjabreflogicpdfpdfannotationimporter` currently includes this statement `import static orgjabrefguiimporteractionsopendatabaseactionlogger` apart from being totally unnecessary (there would be no problem in using an own logger for the class) this is also forbidden a fix to this issue should: 1 remove the dependency in `pdfannotationimporter` and using an own logger 2 enhance the `architecturetests` to detect static imports (which could lead to discovering further errors that might not be as easy to fix),|| idea: there may be checkstyle rules that can be configured to cover our architecture tests || oh that was me fixed this instance in #2618 unfortunately i dont have time to investigate 2however i am happy to have raised attention to this problem by committing this mistake || further architecture related desirable tests are:- logic and viewmodel: no javafx except javafxcollections- view viewmodel and controller: no globals and jabrefgui no direct fxdialogservice- all fxml files can be loaded successfully- no fetcher is used directly outside of the import package || there is a new tool called archunit maybe this is helpful https://githubcom/tng/archunit,1.0,0.0,use static import for assertequals,|| i would prefer a static import of asset und  || done!,0,0,0,0
3887,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,improvements around external file types,         ( (        i tried to implement #3885 but changes of the file type in the linked file editor are not saved for some reason. i ll investigate this again after  is merged. thus only some relative minor code improvements / fixes: - refactor external file type classes and extract a common  externalfiletype  interface. - extract all built-in file types to separate enum (implementing  externalfiletype ) - fix display of external file type editor dialog (which is not shown in the current maintable-beta version)  ----  -   -   -  -   () -  ( -   ( []()?),,3885,improvements around external file types,        ( (      because github does not support autolinking there -->i tried to implement #3885 but changes of the file type in the linked file editor are not saved for some reason ill investigate this again after  is mergedthus only some relative minor code improvements / fixes:- refactor external file type classes and extract a common `externalfiletype` interface- extract all built-in file types to separate enum (implementing `externalfiletype`)- fix display of external file type editor dialog (which is not shown in the current maintable-beta version)-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),|| since this pr is now ready for review over a month ill merge it despite not having any feedback so far,link jabref file to devonthink,hello github-community of jabreftobias diez suggested me to write down my problem here as [this thread]( in the jabref help forum couldnt solve the problem until nowi will copy-paste my description in the following for already tried solutions please take a look at the linked thread:> hello jabref-community>> i just started working with jabref and while i‚Äôm trying to integrate my collected ebooks into jabref i have problems linking my files properly as i couldn‚Äôt find any answers on the forum i might ask you for help :slight_smile:> i‚Äôm a mac-user with devonthink as a my dms for nearly everything all my ebooks are stored within a devonthink database if i drag and drop one of my pdfs from my devonthink gui into jabref it‚Äôs going to copy the path of the database in ‚Äúfinder structure‚Äù> for example it will save:> > `:/users/fabniam/documents/devonthink/studiumdtbase2/filesnoindex/pdf/5/secondary symptoms of dyslexia a comparison of self esteem and anxiety profiles of children with and without dyslexiapdf:pdf`> but as you can see in the path jabref copy the link of the database if i‚Äôm going to reorganise my database or even just renaming the file this link will be useless for this purpose devonthink is able to give out permanent links which are common for use in other apps like microsoft onenote or gtd software these links (i don‚Äôt know if there is a special name for them but i saw similar links in other apps so i‚Äôm guessing it‚Äôs an macos feature) look like the following:> >` x-devonthink-item://3e364aa0-f93d-492d-9d4a-aec6013612d2`> so devonthink produces an unique fingerprint for my file and no matter if i rename move or edit the file i can access it through this link some integrated workflows also use these link eg if i link a file with a wunderlist task:> > ![image of wunderlist]( > i can click this link or just use it via terminal if i use the open command:> > `open x-devonthink-item://3e364aa0-f93d-492d-9d4a-aec6013612d2`> now i want jabref to use these links instead of these ‚Äúfinder structure‚Äù links i don‚Äôt mind if i manually need to update these links in my jabref library> > thank you in advance for your help :slight_smile:,|| i think we need to check/adjust the detection and mark it as online link || we currently have no money to pay someone for that ([donations page]( no one of the jabref team gets paid for jabref thus working on this really depends on the availability of our personal free time - we really welcome feedback on our volunteer work in case you can spend some more time (other than reporting issues) we would really like to encourage you to check  - especially the part asking for improvement of our [help pages]( this would help jabref getting better as a whole ü•á,1.0,0.0,fix checkstyle,,0,0,0,0
3904,1.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0, add union/intersection toogle to groups menu,3269   3739            ( (         ----  -   -   -  -   () -  ( -   ( []()?),,3269, add union/intersection toogle to groups menu,3269 3739         ( (      because github does not support autolinking there -->-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),|| yeah i already thought about the same especially a way to indicate the current status would be nice  so maybe an icon status somewhere i also like these circle indicators from set theory eg:  as you are working on the design any idea where to put such an icon for the groups? || @siedlerchr i think the header of the groups view is the best place in idea this is similar the view settings for the project tree is in the top right corner of this panel so *for me* this would be the first place to look if there are several of such view options we probably need to make a button that opens a context menu if there are only two buttons they might fit into the existing header || i will create a new pr based on maintable beta,40 groups: fast access to view options,jabref version 40 on windows 7i often switch between union and intersection modes please return the ability to quickly switch these settings for example you can add them to the global menu of groups,|| this should be fixed in the latest development version could you please check the build from  thanks! please remember to make a backup of your library before trying-out this version,1.0,0.0,add status message,,0,0,0,0
3931,1.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3929 correct fetcher messages,3929,,3929,3929 correct fetcher messages,3929,|| @siedlerchr we do?!,fetcher messages misleading,`full text document download failed` does not indicate a failed download but that no accessible url was found!,,1.0,0.0,3929 correct fetcher messages,,0,0,0,0
3968,1.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,fix ieee fetcher by enabling cookie support,3966   apparently when in vpn network of university ieee fulltext fetcher needs cookie support enabled           ( (         ----  -   -   -  -   () -  ( -   ( []()?),,3966,fix ieee fetcher by enabling cookie support,3966 apparently when in vpn network of university ieee fulltext fetcher needs cookie support enabled        ( (      because github does not support autolinking there -->-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),,problems finding fulltext for ieeexplore,issues with ieee full-text importeri have tested the latest master version from  on windows 7 and the following problem is encounteredjabref version 42-dev on windows 7 enterprise (build 7601 service pack:1)steps to reproduce:1 use jabref on a network with full-text access to ieeexplore articles (such as a universitys network)2 start a new library with the following bibtex entry```@inproceedings{morabito2017author  {morabito bruno and klein reinhardt and findeisen rolf}booktitle  {2017 american control conference (acc)}doi  {1023919/acc20177963481}isbn  {978-1-5090-5992-8}month  {may}pages  {3457--3462}publisher  {ieee}title  {{real time feasibility and performance of moving horizon estimation for li-ion batteries based on first principles electrochemical models}}url  {  {2017}}```3  select this reference entry within jabref and hit ```alt``` + ```f7``` or go to ```quality -> look up full text documents```4 after a while the following pop-up dialog box opens```no full text document found for entry morabito2017```5 expected behavior: navigate to this same ```url   this works perfectly fine and full-text pdf can be manually downloaded  the auto downloader should have obtained this pdf and linked it to the citation entry,|| the test for open access articles such as  workthere should be no difference for the other articles as long as you really have accessit is hard to debug for me as i dont have ieee access at university @jabref/developers anyone of you has access? || i can reproduce this error for me the ieee fetcher tests fail when i am connected using university vpnthe html page  i get from the url downloader talks about missing cookie support i will see if i can fix that  || thank you for reporting this issue we think that is already fixed in our development version and consequently the change will be included in the next releasewe would like to ask you to use a development build from  and report back if it works for you || no please read the text very carefullyi have explicitly mentioned that i am using the latest developmental version the problem still persists please reopen this issue || we just merged a pull request fixing it || @krishnakumarg1984  yes i know but i just merged the code into the master branch the development build gets automatically updated and built by our ci servers whenever someone commits to the master branch this usually takes a couple of minutes the version string contains the first part of the commit id  (help-> about)  || ah i am so sorry for not correctly interpreting what you said i shall try the latest development build and report back sorry for the mild confusion in my last post || @siedlerchr  @stefan-kolb we may have to reopen this issuei just tried with the latest build>>jabref 42-dev--snapshot--2018-04-20--master--8bbc40e13>windows 7 61 x86 >java 180_161from my universitys network and same error pop-up message persists   curiously the event log in jabref is empty i wonder why #3968 says the problem is only with vpn access? i am currently physically on the campus library on a windows 7 machine hard-wired to the network with a lan cable  just to confirm that this is indeed a persisting bug there is no issue with full-text access to this article from a standard browser pointed to the url   || i think @krishnakumarg1984 is right and the issue still persist just looking at the code never going to match ` || hmm thats odd i will look into that again tomorrow  || @krishnakumarg1984  i just merged the fix which supports those the ieee document urls you have like in your entry  and i also tested your entry with university access and worked for me so i would like you to test this again || @siedlerchr  thank you i shall go to university to check this out will report back soon || woohoo you guys are amazing i just tried the latest master-build from my universitys network and can confirm that this is now fixed  was able to download the full-text of the bibtex entry for which the issue was opened thank you for accepting and pro-actively working to fix this issue#### version info of jabref build used:>jabref 42-dev--snapshot--2018-04-21--master--5c664e1d2>windows 7 61 x86 >java 180_161,1.0,0.0,rename dl,|| remove these two lines || add comment in line before and add a space || also add the comment here please || please rename `dl` to something more meaningful,0,0,0,0
3970,1.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,fixieee,3966  followup from my previous pr.  now document links  in the format    are supported  too.  and i also tested the paper linked in the issue from university network. that works fine  too.            ( (         ----  -   -   -  -   () -  ( -   ( []()?),,3966,fixieee,3966  followup from my previous prnow document links  in the format ` are supported tooand i also tested the paper linked in the issue from university network that works fine too         ( (      because github does not support autolinking there -->-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),,problems finding fulltext for ieeexplore,issues with ieee full-text importeri have tested the latest master version from  on windows 7 and the following problem is encounteredjabref version 42-dev on windows 7 enterprise (build 7601 service pack:1)steps to reproduce:1 use jabref on a network with full-text access to ieeexplore articles (such as a universitys network)2 start a new library with the following bibtex entry```@inproceedings{morabito2017author  {morabito bruno and klein reinhardt and findeisen rolf}booktitle  {2017 american control conference (acc)}doi  {1023919/acc20177963481}isbn  {978-1-5090-5992-8}month  {may}pages  {3457--3462}publisher  {ieee}title  {{real time feasibility and performance of moving horizon estimation for li-ion batteries based on first principles electrochemical models}}url  {  {2017}}```3  select this reference entry within jabref and hit ```alt``` + ```f7``` or go to ```quality -> look up full text documents```4 after a while the following pop-up dialog box opens```no full text document found for entry morabito2017```5 expected behavior: navigate to this same ```url   this works perfectly fine and full-text pdf can be manually downloaded  the auto downloader should have obtained this pdf and linked it to the citation entry,|| the test for open access articles such as  workthere should be no difference for the other articles as long as you really have accessit is hard to debug for me as i dont have ieee access at university @jabref/developers anyone of you has access? || i can reproduce this error for me the ieee fetcher tests fail when i am connected using university vpnthe html page  i get from the url downloader talks about missing cookie support i will see if i can fix that  || thank you for reporting this issue we think that is already fixed in our development version and consequently the change will be included in the next releasewe would like to ask you to use a development build from  and report back if it works for you || no please read the text very carefullyi have explicitly mentioned that i am using the latest developmental version the problem still persists please reopen this issue || we just merged a pull request fixing it || @krishnakumarg1984  yes i know but i just merged the code into the master branch the development build gets automatically updated and built by our ci servers whenever someone commits to the master branch this usually takes a couple of minutes the version string contains the first part of the commit id  (help-> about)  || ah i am so sorry for not correctly interpreting what you said i shall try the latest development build and report back sorry for the mild confusion in my last post || @siedlerchr  @stefan-kolb we may have to reopen this issuei just tried with the latest build>>jabref 42-dev--snapshot--2018-04-20--master--8bbc40e13>windows 7 61 x86 >java 180_161from my universitys network and same error pop-up message persists   curiously the event log in jabref is empty i wonder why #3968 says the problem is only with vpn access? i am currently physically on the campus library on a windows 7 machine hard-wired to the network with a lan cable  just to confirm that this is indeed a persisting bug there is no issue with full-text access to this article from a standard browser pointed to the url   || i think @krishnakumarg1984 is right and the issue still persist just looking at the code never going to match ` || hmm thats odd i will look into that again tomorrow  || @krishnakumarg1984  i just merged the fix which supports those the ieee document urls you have like in your entry  and i also tested your entry with university access and worked for me so i would like you to test this again || @siedlerchr  thank you i shall go to university to check this out will report back soon || woohoo you guys are amazing i just tried the latest master-build from my universitys network and can confirm that this is now fixed  was able to download the full-text of the bibtex entry for which the issue was opened thank you for accepting and pro-actively working to fix this issue#### version info of jabref build used:>jabref 42-dev--snapshot--2018-04-21--master--5c664e1d2>windows 7 61 x86 >java 180_161,1.0,0.0,fix checkstyle,,0,0,0,0
4011,1.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,reimplement tooltips for file and identifier columns,this 3973.  reimplements tooltips for file-  url-/doi- and eprint-column in the maintable-beta.  ----  -   -   -  -   () -  ( -   ( []()?),,3973,reimplement tooltips for file and identifier columns,this 3973reimplements tooltips for file- url-/doi- and eprint-column in the maintable-beta-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),|| thanks again for your contribution!,reimplement tooltips in the url column,this is a followup for  tooltips in the url column should be re-activated and display sensible messages,|| fixed by #4011,1.0,0.0,extract not translatable strings out of localization,|| as doi arxiv are not really translateable i would just add them as parameter eg open %0 url  %1 (at least for arxiv) || done!,0,0,0,0
4184,1.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3062: ctrl + f selects search field again,         ( (        shortcut was simply not registered. also remove a bit of legacy code which is no longer needed.  ----  -   -   -  -   () -  ( -   ( []()?),,3062,3062: ctrl + f selects search field again,        ( (      because github does not support autolinking there -->shortcut was simply not registered also remove a bit of legacy code which is no longer needed-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),,ctrl+f does not select the search field,keywords: shortcut short cut keybinding key binding hotkey hot keyjabref 40-dev windows 10 100 amd64 java 180_144steps to reproduce:1 focus is on the main table2 i press <kbd>ctrl</kbd>+<kbd>f</kbd>3 nothing happensexpected: focus is on the search field,|| i debugged a bit and the action is correclty recognized and the method to requestfocus is called but somehow the textfield is not focused maybe @tobiasdiez  has an idea because he changed that together with the autocompletioni even tried to wrap it in a platformrunlater call but that did not work || happens again in the `maintable-beta` branch as discussed in the devcall i should open issues for issues with that branch (which will become the master branch),1.0,0.0,3062: ctrl + f selects search field again,,0,0,0,0
4212,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,make attached files relative to the file directory,4201           ( (         ----  -   -   -  -   () -  ( -   ( []()?),,4201,make attached files relative to the file directory,4201        ( (      because github does not support autolinking there -->-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),,jabref 50dev does not respect the standard directory,jabref 50-dev--snapshot--2018-07-12--master--dd9b22911windows 7 61 amd64 java 180_172-  i have tested the latest master version from  and the problem persistssteps to reproduce:1 load jabref 50dev and any library2 try to save a pdf entry for an entry3 you will notice that the path which is saved is the full path the directory in the standard directory entry includedthis is a verschlimmbesserung sorry for the nice german word it means changing not for the better but for the worthfor first entry is manually edited the second not( standard directory is:![grafik](https://user-imagesentcom/9216487/42723330-1c08e69a-875c-11e8-8090-24fa5e38ec8dpng),|| did you add the pdf manually or did you use a fetcher?as far as i remember there was nothing changed in the behavior maybe a cleanup call is needed i currently have the code not at hand  || sorry for the delay:i used the rightclick add file for adding the pdf || it only happens if you use rightclick on entry -> attach fileinside the general tab it works fine  || thank you for reporting this issue we think that is already fixed in our development version and consequently the change will be included in the next releasewe would like to ask you to use a development build from  and report back if it works for you please remember to make a backup of your library before trying-out this version,1.0,0.0,fix variable name,|| in my opinion this code should be refactored to use the same code as the same action in the entry editor otherwise we will again run into a similar problem where the two actions are different in behavior || as we wanted to get ride of nulls i dont like this change maybe we should use a `monadicbinding` (optional binding) and use an empty string as file type? || please add a short comment explaining what is done here || changed it,0,0,0,0
4245,1.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,1.0,1.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,fix style issues in about dialog,         ( (        4202 and a few other small style related issues. i also created a little new app that make it simple to test the display of javafx controls. as of now  i only added a lot of buttons in different styles and states: (  please merge instead of squashing the commits.  ----  -   -   -  -   () -  ( -   ( []()?),,4202,fix style issues in about dialog,        ( (      because github does not support autolinking there -->4202 and a few other small style related issues i also created a little new app that make it simple to test the display of javafx controls as of now i only added a lot of buttons in different styles and states:( merge instead of squashing the commits-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),|| lgtm  || i am merging this now,the window for about jabref is to small: the buttons at the bottom are afunctional,jabref 50-dev--snapshot--2018-07-12--master--dd9b22911windows 7 61 amd64 java 180_172-  i have tested the latest master version from  and the problem persistsplease see the image i could not press ?? and ?? i could however copy paste the information about the version etc(https://user-imagesentcom/9216487/42723357-991b9cfe-875c-11e8-90b3-354f224bd0a6png),|| confirmed under windows 10 latest master the window is too small to show the buttons at bottom and you cant resize them( || i digged a bit into this must be related to some binding the change of our dialog layout stuff under the hood the information for authors etc is correctly filled in the variables - so its not the problemin contrast to other dialogs the binding are directly defined in the fxml,1.0,0.0,rename flatbutton to icon-button,,0,0,0,0
4258,1.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,1.0,0.0,0.0,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,migrate  to junit5,         ( (        3959]( we migrate some packages imported from junit4 to junit5  such as org.junit.test --> org.junit.jupiter.api.test   org.junit.experimental.categories.category --> org.junit.jupiter.api.tag  and so on.  at the same time  we slightly modify some codes which rely on those packages and doesn t apply to junit5 but applys to junit4. for example   we change @test(excepted = xxx.class) into using assertthrows and lambda  @category(xxx.class) into @tag(‚Äúxxx‚Äù)    @before into @beforeeach   and so on.  ----  -   -   -  -   () -  ( -   ( []()?),,3959,migrate  to junit5,        ( (      because github does not support autolinking there -->3959]( migrate some packages imported from junit4 to junit5 such as orgjunittest --> orgjunitjupiterapitest  orgjunitexperimentalcategoriescategory --> orgjunitjupiterapitag and so on at the same time we slightly modify some codes which rely on those packages and doesnt apply to junit5 but applys to junit4 for example  we change @test(excepted  xxxclass) into using assertthrows and lambda @category(xxxclass) into @tag(‚Äúxxx‚Äù)   @before into @beforeeach  and so on-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),|| first of all thanks for your contribution! üëç  i just took a quick look at the code and it seems youre on a good wayit would be really nice if you convert the temporary folder rule from junit4 to junit5 as well@tobiasdiez already implemented a sample conversion in a test: in addition it would ne also nice if you could migrate the reaming parametrized tests (the old ones rely on the runwith)  examples for the parametrized test can be found in the exporters i thinki think we can get rid of the swing gui tests as they are merely obsolete || now that another pr (#4260) was opened witch converts the tests from junit 4 to 5 i would propose the following:- you make this pr compile (ie fix all the failing tests) in a minimal intrusive way (ie no further conversion of other tests)- we merge this pr and then afterwards #4260 - everything that is still junit 4 at this stage can be converted in further prs || obsolete due to #4260,migrate all tests to junit 5,1 migrate all remaining tests2 remove obsolete gradle dependencies & configurations,|| our importer/exporter and a lot of our other tests rely on this feature:refs  planned for rc1 || do we really need to migrate? the junit5 vintage engine should run the old junit4 tests i already removed the old dependencies at  || @linusdietz good question if junit 4 support does not introduce additional dependencies but is included in junit 5 per default it is really just nice to have migration and not necessary could also be a nice beginners task then || it is a separate dependency  would be nice to migrate all tests at some point to junit 5 but there is no real urgency in doing this for now the only blocker is the temporary file / folder extension (although we could just copy the one provided in the junit sample rep) which however only affects a very small subset of our tests || the tempoaryfolder extension will be published in the junit-pioneer project:  || the tempdir extension is now part of  and a test conversion to this extension can be found in  (sorry for pushing it directly onto the master) || very good so then we can go ahead converting the rest i think this was the only issue left  || thanks to @metatronwings most of the tests are now converted a few things remanin to be done (see  but require a new version of archunit and/or junit thus i put this issue on-hold for the momen || adressed by https://githubcom/jabref/jabref/pull/5394,1.0,0.0,issue 3959 initial commit,,0,0,0,0
4311,1.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,fix drag and drop in entry editor,4305  4087 (comment  same issue described)  consistent with preview panel behavior           ( (         ----  -   -   -  -   () -  ( -   ( []()?),,4305,fix drag and drop in entry editor,43054087 (comment same issue described)consistent with preview panel behavior        ( (      because github does not support autolinking there -->-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),|| as its a copy and paste of the method handling in the preview panel i merge this now,dropping a file on entry editor does nothing,when dropping a file on the entry editor nothing happens (and no error is shown) it works through if one directly drops on the file field,|| just copy and paste of the preview panel methods,1.0,0.0,fix drag and drop in entry editor4305,|| please remove all these globals(eg add the prefs needed to `entryeditorpreferences`),0,0,0,0
4337,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,fix export of corporate author to msoffice,fix tests fix  #4329    the underlying problem is the same as in #4152  however  i came up with a workaround for msoffice.  1. getting the original field 2. check for corporate author (braces start and end) 3. get latex free value 4. readd braces for corporate  5. parse author  the only edgecase which can occur if the entry starts with an author in latex braces and ends with an author in latex braces. that one will probably be interpreted as corporate.            ( (         ----  -   -   -  -   () -  ( -   ( []()?),,4329,fix export of corporate author to msoffice,fix testsfix  #4329  the underlying problem is the same as in #4152 however i came up with a workaround for msoffice 1 getting the original field2 check for corporate author (braces start and end)3 get latex free value4 readd braces for corporate 5 parse authorthe only edgecase which can occur if the entry starts with an author in latex braces and ends with an author in latex braces that one will probably be interpreted as corporate        ( (      because github does not support autolinking there -->-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),|| the author parser is not the problem as long as the braces are present corporate authors are detected and correctly recognized its the latex to unicode converter who kills the braces from corporate authors  this is the core problem see other linked issue and i currently see no easy way to either distinguish latex macros and corporate braces,office export regression in 431 master,-  i have tested the latest master version from  and the problem persistsjabref version 431 and 50-dev--snapshot--2018-09-09--master--4c7194a39 on windows 10microsoft word 1803 (microsoft office 365)regression of #1497 in the latest jabref releasesteps to reproduce:1 use an institute as an author eg```@misc{nvd  author         {{national institute of standards and technology (nist)}}  title          {national vulnerability database ({nvd)} version 22}  url            { export to ms word 2007 xml3 try to load under ms word manage sources### expected```xml<b:source><b:bibtex_entry>misc</b:bibtex_entry><b:sourcetype>misc</b:sourcetype><b:title>national vulnerability database (nvd) version 22</b:title><b:tag>nvd</b:tag><b:url> institute of standards and technology (nist)</b:corporate></b:author></b:source>```### got```xml<b:source><b:bibtex_entry>misc</b:bibtex_entry><b:sourcetype>misc</b:sourcetype><b:title>national vulnerability database (nvd) version 22</b:title><b:tag>nvd</b:tag><b:url>http://nvdnistgov/</b:url><b:author><b:author><b:namelist><b:person><b:last>standards</b:last><b:middle>institute</b:middle><b:first>national</b:first></b:person><b:person><b:last>(nist)</b:last><b:first>technology</b:first></b:person></b:namelist></b:author></b:author></b:source>```,,1.0,0.0,add comment,,0,0,0,0
4355,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,auto trim url field,         ( (       fixes 4288] created a formatter to auto trim all kinds of whitespace defined by java ----  -   -   -  -   () _no need_ -  ( -   ( []()?),,4288,auto trim url field,        ( (      because github does not support autolinking there -->fixes 4288]created a formatter to auto trim all kinds of whitespace defined by java-----  change in changelogmd described-  -  manually tested changed features in running jabref-   () _no need_-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),,trim url field in entry editor,feature request/bug report from the forum:1 copy the following in the source tab of an entry2 try to open the url3 explorer is opened (on windows)solution would be to trim the url field automatically```url  { 1<1655:tosocc>20co2}```http://discoursejabreforg/t/jabref-cannot-identify-the-url-if-there-is-space-between-the-url-and-opening-and-closing-braces/1314,|| i thought opening and closing spaces were automatically trimmed for each field before? || cant seem to pinpoint where url fields are to be trimmed the only method that seems to deal with urls is in modsexporterjava called addurl i added code to trim url but doesnt reflect in the application does anyone know what i am missing?  || hithe right place is in the entry editor i saw that there is already a paste handler for the the url field in the fieldseditors class   i think it should be sufficient to create a copy of the  removenewlinesformatter which only removes newlines before the first opening brace and the last closing brace and then add this as paste handler to the code area || thanks to @songyu-wang this should be fixed in the latest development version could you please check the build from  thanks! please remember to make a backup of your library before trying-out this version,1.0,0.0,fix ci error,,0,0,0,0
4389,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,display deprecated fields in misc entry also in optional fields tab,4388   the reason for the original code was to 3046   however i couldn t reproduce the issue mentioned there after i removed it. the custom entry types dialog effectively prevents you from adding from the same field twice.            ( (         ----  -   -   -  -   () -  ( -   ( []()?),,4388,display deprecated fields in misc entry also in optional fields tab,4388 the reason for the original code was to 3046  however i couldnt reproduce the issue mentioned there after i removed it the custom entry types dialog effectively prevents you from adding from the same field twice         ( (      because github does not support autolinking there -->-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),,misc entry has year and month both in optional and deprecated tabs,jabref 431linux 41814-arch1-1-arch amd64 java 180_192steps to reproduce:1 create and select a misc entry in biblatex modewhile these fields should be in the required tab as biblatex manual says:> required fields: `author/editor title year/date`> optional fields: `subtitle titleaddon languagehowpublishedtypeversionnoteorganizationlocationdatemonthyearaddendumpubstatedieprinteprintclasseprinttypeurlurldate`,|| i talked to the  biblatex guys  plk/biblatex#833 and its an error in the specification it does not make sense to add the fields double year and months are only valid in required fields,1.0,0.0,display deprecated fields in misc entry also in optional fields tab4388,|| why do you add date and year here? they fields are already in the required tab? || doesnt this now also shows the deprecated fields in the second optional pane? || see biblatex manual 211 misc entry type its listed both in required and optional fields either its an error in the spec or there is some reason why this is double?>required felds: author/editor title year/date>optional felds: subtitle titleaddon language howpublished>type version note organization location date month year>addendum pubstate doi eprint eprintclass eprinttype url>urldate || yes that looks to me like an error in manual  || it was confirmed as an error created an issue at biblatex repo,0,0,0,0
4429,1.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,fix bug when edit group name,issue #3189,,3189,fix bug when edit group name,issue #3189,|| ![bandicam 2018-10-29 16-33-15-599](https://user-imagesentcom/15236829/47645400-1bf11b80-db9b-11e8-969d-68eee23c8dadgif),renaming a group via groups interface does not change the group name in the interface,jabref 40-devlinux 440-92-generic amd64 java 180_131steps to reproduce:0 open group interface (groups -> toggle groups interface)1 create a group2 add an item to the group3 right click on the group in the group interface -> edit group4 change the group namegroup name in the interface stays the same  if you check the group name by selecting an item and going to its bibtex source you can see the change there![screenshot from 2017-09-02 18-09-52](https://user-imagesentcom/17808285/29999791-1e14ef46-900a-11e7-9ae3-2b2150bc8149png),|| when you close and expand the group the change should also be visible no idea though why it is not visible immediately the same issue occurs if you assign an icon or color to the group || might be related to this: || these bug still exists i will work on it || when i press edit group that show `orgjabrefmodelgroupsabstractgroup#name` instead of `orgjabrefguigroupsgroupnodeviewmodel#displayname` why? whats the difference between them? || the `displayname` is a formatted version of `name` for example if `name` contains latex commands like `hell\{o}` then `displayname` is the unicode version `hell√≥` || this should be fixed in the latest development version could you please check the build from  thanks! please remember to make a backup of your library before trying-out this version || can confirm this has been fixed in:jabref 50-dev--snapshot--2019-01-05--master--d281ece4bwindows 10 100 amd64 java 180_191,1.0,0.0,change row name if group name changed,,0,0,0,0
4470,1.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3189 fix group renaming,fix group renaming #3189 .,,3189,3189 fix group renaming,fix group renaming #3189,|| fixed  || please have a look at the failing tests and please test if the latex stuff is still transformed to unicode after rename  || @ali96kz why did you close the pull request? you can simply push your changes to your branch and the pr is updated  || @tobiasdiez could you review again?,renaming a group via groups interface does not change the group name in the interface,jabref 40-devlinux 440-92-generic amd64 java 180_131steps to reproduce:0 open group interface (groups -> toggle groups interface)1 create a group2 add an item to the group3 right click on the group in the group interface -> edit group4 change the group namegroup name in the interface stays the same  if you check the group name by selecting an item and going to its bibtex source you can see the change there![screenshot from 2017-09-02 18-09-52](https://user-imagesentcom/17808285/29999791-1e14ef46-900a-11e7-9ae3-2b2150bc8149png),|| when you close and expand the group the change should also be visible no idea though why it is not visible immediately the same issue occurs if you assign an icon or color to the group || might be related to this: || these bug still exists i will work on it || when i press edit group that show `orgjabrefmodelgroupsabstractgroup#name` instead of `orgjabrefguigroupsgroupnodeviewmodel#displayname` why? whats the difference between them? || the `displayname` is a formatted version of `name` for example if `name` contains latex commands like `hell\{o}` then `displayname` is the unicode version `hell√≥` || this should be fixed in the latest development version could you please check the build from  thanks! please remember to make a backup of your library before trying-out this version || can confirm this has been fixed in:jabref 50-dev--snapshot--2019-01-05--master--d281ece4bwindows 10 100 amd64 java 180_191,1.0,0.0,fix code style,|| _you should probably call here getvalue()  || fixed || this should be```suggestion        displaynameproperty  new simplestringproperty()        displaynamepropertybind(easybindmap(groupnodegetgroup()nameproperty() formatter:format))```we want to update the displayed name every time the name of the group changes using the formatter || the indent looks to be off || why did you removed this code?  || changing this to `stringproperty` shouldnt be necessary normally the table automatically refreshes the cell if the underlying data is changed please revert this change even if then the bug is no longer fixed (see the general comment),0,0,0,0
4547,1.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,do not extract file ending from urls,4544 do not extract file ending from urls,,4544,do not extract file ending from urls,4544 do not extract file ending from urls,|| should also 4480 please check @tobiasdiez i cannot access jstor stuff due to 403 however with any url and some appended key values like ?accetptrue it works for me again || please fix the checkstyle issue (import with * is not allowed),downloads from arxiv saved with wrong file suffix,this is with the current snapshot (jabref 50-dev--snapshot--2018-12-19--master--949d20496) opening the attached bibtex library and trying to download the respective pdf via the entrys general tab leads to a file name ending in `01203v1` instead of `pdf` the contents are fine though this is most probably due to the url used by arxiv: ` but that shouldnt be an excuse )[arxivbibtxt](https://githubcom/jabref/jabref/files/2700102/arxivbibtxt),|| thanks to @stefan-kolb  this should be fixed  in the latest masterwe would like to ask you to use a development build from  and report back if it works for you please remember to make a backup of your library before trying-out this version,1.0,0.0,checkstyle,|| if i remember we have a no * for imports convention  || do we really need a whole new library simply for the detection of the file extension? || its actually not that straight forward to detect media types and map them to file extensions the library itself claims to be very small when only reliying on the core package,0,0,0,0
4549,1.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,fixes that renaming a group did not change the group name in the interface,3189.,,3189,fixes that renaming a group did not change the group name in the interface,3189,,renaming a group via groups interface does not change the group name in the interface,jabref 40-devlinux 440-92-generic amd64 java 180_131steps to reproduce:0 open group interface (groups -> toggle groups interface)1 create a group2 add an item to the group3 right click on the group in the group interface -> edit group4 change the group namegroup name in the interface stays the same  if you check the group name by selecting an item and going to its bibtex source you can see the change there![screenshot from 2017-09-02 18-09-52](https://user-imagesentcom/17808285/29999791-1e14ef46-900a-11e7-9ae3-2b2150bc8149png),|| when you close and expand the group the change should also be visible no idea though why it is not visible immediately the same issue occurs if you assign an icon or color to the group || might be related to this: || these bug still exists i will work on it || when i press edit group that show `orgjabrefmodelgroupsabstractgroup#name` instead of `orgjabrefguigroupsgroupnodeviewmodel#displayname` why? whats the difference between them? || the `displayname` is a formatted version of `name` for example if `name` contains latex commands like `hell\{o}` then `displayname` is the unicode version `hell√≥` || this should be fixed in the latest development version could you please check the build from  thanks! please remember to make a backup of your library before trying-out this version || can confirm this has been fixed in:jabref 50-dev--snapshot--2019-01-05--master--d281ece4bwindows 10 100 amd64 java 180_191,1.0,0.0,fixes that renaming a group did not change the group name in the interface3189,,0,0,0,0
4604,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,enable default cursor for new entry,4600. sets text field on focus at the end of initialization by running the javafx thread.  ----  -   -   -  -   () -  ( -   ( []()?),,4600,enable default cursor for new entry,4600sets text field on focus at the end of initialization by running the javafx thread-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),,new entry default cursor location,jabref 50-dev--snapshot--2019-01-21--master--40d049e08windows 10 100 amd64 java 180_172issue:1 copy a doi number from any website2 switch to jabref hit ctrl-n for a new entry window3 there is no cursors so one cannot hit just simply ctrl-v copying in the doi numbersolution:make the cursor by default in the id text field there is anyway no other place where the cursor should be active in that overlay window this would enhance greatly the workflow and usability,|| thanks to @chelseyong this is now implemented in the latest development version could you please check the build from  thanks! please remember to make a backup of your library before trying-out this version,1.0,0.0,force javafx to run thread,,0,0,0,0
4644,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,fix for issue 4641: remove usage of tempdirectory extension from junit-pioneer,fixes: #4641  removed the tempdirectory extension from junit-pioneer with the built-in extension of junit 5.4 ---- -  -  (),,4641,fix for issue 4641: remove usage of tempdirectory extension from junit-pioneer,fixes: #4641 removed the tempdirectory extension from junit-pioneer with the built-in extension of junit 54-----  manually tested changed features in running jabref-  (https://githubcom/joelparkerhenderson/git_commit_message),|| perfect thanks a lot!,remove usage of tempdirectory extension from junit-pioneer,as of junit 54 the temporary directory extension is included in the main api see [documentation]( thus we can replace the `tempdirectory` extension from junit-pioneer with the built-in extension (and remove the `junit-pioneer` dependency),|| i am working on this issue,1.0,0.0,removed unused import,,0,0,0,0
4696,1.0,0.0,0.0,0.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,remove resolve duplicate keys dialog,         ( (        4614  removes the resolve duplicate keys dialog. this feature is made obsolete by the integrity check and the user can generate new keys very simply (for all entries or only for the duplicated ones) through the entry editor and/or menu.  ----  -   -   -  -   () -  ( -   ( []()?),,4614,remove resolve duplicate keys dialog,        ( (      because github does not support autolinking there -->4614removes the resolve duplicate keys dialog this feature is made obsolete by the integrity check and the user can generate new keys very simply (for all entries or only for the duplicated ones) through the entry editor and/or menu-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),|| well however on import there should be a warning and the option to resolve duplicate keys its essential to discover duplicates || @siedlerchr such a feature wasnt implemented (the only check was when opening a database) and is obsolete with my other pr #4692 where now keys are automatically generated for every imported entry duplicate entries are also highlighted in the import dialog || okay then i see no problem!,bibtexkey duplicate check throws npe,<!-- note: please use the github issue tracker only for bug reports feature requests questions and general feedback is now handled at  --> jabref version <!-- version as shown in the about box --> on <!-- windows 10|ubuntu 1404|mac os x 108| --><!-- important note -><!--       please always test if the bug is still reproducible in the latest development version      we are constantly improving jabref and some bugs may already be fixed      you can download the development version at:       please make a backup of your library before you try out this version      if you already use a development version ensure that you use the latest one -->-  i have tested the latest development version from  and the problem persists<!-- add a clear and concise description of what the bug is -->steps to reproduce the behavior:1 2 3 <!-- if applicable add excerpt of the bibliography file screenshot and excerpt of log (available in the error console) --><details>  <summary>log file</summary>    ```  paste an excerpt of your log file here  ```</details>,|| good afternooni received the appended windows and error log while opening my data basei think the issue is linked with an attempt from jabref to resolve duplicated keysregardsherv√©[pb jabreftxt]( jabref]( || a related but not completely identical problem is reported in #4630 || we decided to remove this dialog as the feature is already covered in the integrity check and will be covered in the import dialog,1.0,0.0,remove resolve duplicate keys dialog,,0,0,0,0
4731,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,fix default import format pattern,remove display array add migration 4724            ( (         ----  -   -   -  -   () -  ( -   ( []()?),,4724,fix default import format pattern,remove display arrayadd migration4724        ( (      because github does not support autolinking there -->-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),,wrong default filename format pattern,jabref 50-dev--snapshot--2019-03-06--master--ddd12aec4the default file format patterns given in the preferences->import drop down menu are `bibtexkey` and `bibtexkey - title` however this leads to files being named literally `bibtexkeypdf` the correct options should be `[bibtexkey]` and `[bibtexkey] - [title]` -- then the renaming (and moving) of files works in the cleanup entries,|| this issue should be fixed now in the lastet masterwe would like to ask you to use a development build from  and report back if it works for you please remember to make a backup of your library before trying-out this version || yep the defaults are now correct thanks!,1.0,0.0,fix default import format patternremove display arrayadd migrationfixe #4724,|| do we really need a migration here? as this bug was introduced in 50 i doubt that many users are affected || it looks weird as it will display a wrong value in the field next to the combobox the combobox has different values then,0,0,0,0
4738,1.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,adding support for input methods,4474           ( (         ----  -   -   -  -   () -  ( -   ( []()?),,4474,adding support for input methods,4474        ( (      because github does not support autolinking there -->-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),|| thank you! i am enjoying the process so far,cant input chinese characters in biblatex source,<!-- note: please use the github issue tracker only for bug reports feature requests questions and general feedback is now handled at  --> jabref version jabref 50-dev--snapshot--2018-11-09--master--bab9ae819linux 41477-041477-generic amd64 java 180_181<!-- version as shown in the about box --> on ubuntu 1804<!-- windows 10|ubuntu 1404|mac os x 108| --><!-- important note -><!--       please always test if the bug is still reproducible in the latest development version      we are constantly improving jabref and some bugs may already be fixed      you can download the development version at:       please make a backup of your library before you try out this version      if you already use a development version ensure that you use the latest one -->-  i have tested the latest development version from  and the problem persists<!-- add a clear and concise description of what the bug is -->steps to reproduce the behavior:1open and entry2 choose biblatex source3input chinese charactersi cant input chinese characters in biblatex source but i can do it in other fields and copy chinese characters from other places to biblatex source<!-- if applicable add excerpt of the bibliography file screenshot and excerpt of log (available in the error console) --><details>  <summary>log file</summary>    ```  paste an excerpt of your log file here  ```</details>,|| the workaround posted in  should work || i would like to work on this issue || thanks to @captaindavinci  this should now be fixed in the latest development versionwe would like to ask you to use a development build from  and report back if it works for you please remember to make a backup of your library before trying-out this version || yes it is fixed thank you!,1.0,0.0,adding support for input methods4474,,0,0,0,0
4758,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,modifications to improve contrast of ui elements,         ( (       fixes 4583](  (  ----  -   -   -  -   () -  ( -   ( []()?),,4583,modifications to improve contrast of ui elements,        ( (      because github does not support autolinking there -->fixes 4583](  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),|| lgtm! thanks for the contribution!  @tobiasdiez  do we need to adjust the dark theme as well? || i think in the dark theme everything is dark so need for action -),contrast of several ui elements is too low,![issuecontrast]( description of issue    |      possible solution        |  additional remarks ||----------|:-------------:|------:||  contrast between entry counters in sidebar and background is too low<br>sidebar & toolbar not visually separated<br>contrast between alternative rows in entry table not high enough |  darker background color of sidebar<br>darken color of entry counters to contrast of 3:1 <br>darker alternative row background| contrast of font should still be high enough<br> |,|| hi im interested in working on this issue || thanks to @samiyac this is now implemented in the latest development version could you please check the build from  thanks! please remember to make a backup of your library before trying-out this version,1.0,0.0,merge branch master into fix-for-issue-4583,,0,0,0,0
4761,1.0,0.0,0.0,1.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,enable import button only if entry selected,         ( (       fixes 4755](  ----  -   -   -  -   () -  ( -   ( []()?),,4755,enable import button only if entry selected,        ( (      because github does not support autolinking there -->fixes 4755](  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),,enable import button only if entry selected,the import button in the import dialog should only be enabled if at least one entry is selectedmoreover if this dialog is triggered by an import action all entries should be selected by default (if triggered by a websearch then no entries should be selected by default as it is right now),|| i would like to work on this issue || @samiyac glad to hear!you should be able to get the button via `(button) thisgetdialogpane()lookupbutton()` then it is probably enough to bind the `disableproperty` to the `emptyproperty` of the list of checked items,1.0,0.0,merge branch master into fix-for-issue-4755,,0,0,0,0
4780,1.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,nightly: indicate the build-date and git revision,add the information of the latest jabref version and its release date in about panel. screenshots of the new layout:  ![aboutjabref](   this pr 4733  .          ( (         ----  -   -   -  -   () -   ( -   ( []()?),,4733,nightly: indicate the build-date and git revision,add the information of the latest jabref version and its release date in about panel screenshots of the new layout:![aboutjabref]( pr 4733          ( (      because github does not support autolinking there -->-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-   (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),|| thanks for your pr it appears that we both misunderstood the request in #4733 i also thought that the corresponding build date should be added to the about dialog however this information is already displayed in the lower part:( there is no reason to show the build date also at the top sorry to say but this makes your pr sadly obsolete,nightly: indicate the build-date and git revision,in the current nightly/dev versions please display the build-date in the title barit would also be nice if i could see the git-rev (commit-hash) too,|| this should be displayed already in the about window and the filename is autogenerated with date + hash || the class `buildinfo` should contain all necessary information i think the git commit is not necessary as it is not helpful for the average user  || the `buildinfo` class reads the file [buildproperties]( however the file contains place holder values (which are reflected in the about page as well) should these values be updated at run time? || these placeholders are resolved by the build server so no need to change the file  || as @siedlerchr said this information is already contained in the about dialog:( the build date is a relativly unimportant information i also dont see any reason to add it to the titlebar,1.0,0.0,fix code style and update buildinfo testsfix the style of added code update buildinfo tests changing theexpected version check to the latest one and fix typo in changelogsigned-off-by: kaiquekk <kaiquekomata@gmailcom>,|| please do **never ever** use the simpledateformat! (its more than deprecated) since java 8 you should always use the new api for  localdate and localdatetime  || better check if the list is empty isempty() using exceptions for control flow handling is not a good idea,0,0,0,0
4822,1.0,0.0,0.0,1.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,convert autolinkfilesaction to javafx,4819. also convert a few other message boxes to javafx.           ( (         ----  -   -   -  -   () -  ( -   ( []()?),,4819,convert autolinkfilesaction to javafx,4819also convert a few other message boxes to javafx        ( (      because github does not support autolinking there -->-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),|| lgt build failing is due to previous problematic pr with cleanup,convert autolinkfilesaction to javafx,today i discoverd that the autosetlinks is  still using swing stuff should be converted to javafx and probably also converted to an instance classrefs #3861,,1.0,0.0,convert a few more dialogs to javafx,|| i think this dialog is superflous as jabref wont even start with java9 cause of the class/module visibility || you dont have to overwrite succeeded as a call to linkfilestasksetonsucceeded() has the same effecti prefered to only overwrite call,0,0,0,0
4839,1.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,fix parser exception when loading tex-groups with non-existing file,4735.  catch file not found exception and handle non existing aux files gracefully.           ( (         ----  -   -   -  -   () -  ( -   ( []()?),,4735,fix parser exception when loading tex-groups with non-existing file,4735 catch file not found exception and handle non existing aux files gracefully        ( (      because github does not support autolinking there -->-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),,non-existing aux file in group throws ioexception,<!-- note: please use the github issue tracker only for bug reports feature requests questions and general feedback is now handled at  --> jabref dev version <!-- version as shown in the about box --> on windows 10 <!-- windows 10|ubuntu 1404|mac os x 108| --><!-- important note -><!--       please always test if the bug is still reproducible in the latest development version      we are constantly improving jabref and some bugs may already be fixed      you can download the development version at:       please make a backup of your library before you try out this version      if you already use a development version ensure that you use the latest one -->-  i have tested the latest development version from  and the problem persists<!-- add a clear and concise description of what the bug is -->steps to reproduce the behavior:1 create a group based on aux file2 close and save library3 remove aux file4 open library again -> get error message because of ioexception group tree is emptysolution:catch exception (and log warning) here  if applicable add excerpt of the bibliography file screenshot and excerpt of log (available in the error console) --><details>  <summary>log file</summary>    ```  paste an excerpt of your log file here  ```</details>,|| hi @tobiasdiez i would like to work on this issue || @arturolc ive now fixed this myself as i again run into this problem hope you didnt already started working on this,1.0,0.0,fix checkstyle,|| whats this making for a difference?  || its a static method so there is no reason to call it from an instance variable (btw: automatic change by intellj),0,0,0,0
4860,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,remove deprecated awt apple extension,3905           ( (         ----  -   -   -  -   () -  ( -   ( []()?),,3905,remove deprecated awt apple extension,3905        ( (      because github does not support autolinking there -->-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),|| @linusdietz  @halirutan  could you please test if this removal breaks anything related to mac? the only thing from the code might be the file handling eg double? click on a bib file in the finder  || tested it for a day no issues appeared,apple java extensions still needed?,do they still make any sense?https://developerapplecom/legacy/library/samplecode/applejavaextensions/introduction/introhtml,|| at least with java 9 they are obsolete and with javafx no longer needed but we still have one or two dialogs who use them  || refs #3861  || so full steam ahead for the javafx migration üéâ  || refs #3421,1.0,0.0,remove mac adapter from frame,,0,0,0,0
4964,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,remove ui threadlist for maintable as it prevents sorting in maintable,4886  renenables sorting.  tried a bit around and could not find any side issue so far.            ( (         ----  -   -   -  -   () -  ( -   ( []()?),,4886,remove ui threadlist for maintable as it prevents sorting in maintable,4886renenables sortingtried a bit around and could not find any side issue so far        ( (      because github does not support autolinking there -->-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),|| added it around the original getentries that works now as well || jabref 50-dev--snapshot--2019-05-11--master--3baa6bd22linux 4180-18-generic amd64 java 180_191yes seems to work fine  its a little slow perhaps?  jabref seems to need a up to 7 seconds to sort a newly-selected date/year column (thinkpad t560 with i5 core cpu bib database with 4000+ entries) and a few seconds after a sort to start receiving keystrokes again  alphabetic field columns sort more quicklythanks!dominik || @tobiasdiez  i didnt encounter any problems with the cleanup maybe we can remove the wrapper? seems to cost performance,the ordering of columns in the main table was disabled?,steps to reproduce the behavior:1) open a bib-file in jabref 2) click on the column headers in the main table and try to sort by any of the columns3) this functionality seems to be disabled how can i enable it again? is it a bug? (event log window is empty)jabref 50-dev--snapshot--2019-04-14--master--939cf59c2linux 507-1-default amd64 java 180_201 (build 180_201-b09),|| thanks for the report that is definitely a regression bug it was working fine a few versions ago if i remember correctlyedit// confirmed on windows 10 with 47f43ca63616f04bfa780c9a8d83143d919d1f80 tjabref 50-devwindows 10 100 amd64 java 180_202 || @tobiasdiez  i found the issue: in the maintable if i remove the bindings wrapper it works again``` thissetitems(bindingshelperforui(modelgetentriesfilteredandsorted()))        // enable sorting        modelgetentriesfilteredandsorted()comparatorproperty()bind(thiscomparatorproperty())``` || the issue is not solved in the latest snapshot of today (`2019-05-06 c168c4978`) || @siedlerchr @tobiasdiez what is the problem with this why is the correction not yet applied? it renders my working with jabref very difficult the version snapshot--2019-05-10--master--751c5b5e7 does not have sorting back || please be patient!  we understand that this is an important issue as long as the issue is not closed its not fixed no need to constantly question it  come on you know the ruleswhile the fix looks simple it might have other consequences which we need to check but i will look at it in detail now || should be fixe now in the latest master 3baa6bd we would like to ask you to use a development build from  and report back if it works for you please remember to make a backup of your library before trying-out this version || great it works! thanks,1.0,0.0,wrap around original entries,,0,0,0,0
4999,1.0,0.0,0.0,1.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,1.0,1.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,fix iee fetcher,4997   add exception dialog on import fail  check if we have keywords field present in json           ( (         ----  -   -   -  -   () -  ( -   ( []()?),,4997,fix iee fetcher,4997 add exception dialog on import failcheck if we have keywords field present in json        ( (      because github does not support autolinking there -->-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),,ieexplore online fetcher not working,online fetcher not generating results problem started 3 weeks back prior to that it was working perfect in the beginning the error was shown as internet connection issue after updating the jabref with latest version the search keeps processing with no result the internet is connected with proxy hostname and authentication already given in the preferences![screen](https://user-imagesentcom/50617012/58316944-633e4280-7e32-11e9-8485-11b9bfb55537png),|| thanks for your report! this was indeed a bug in the ieee fetcher in addtion if any fetcher throws an error it will be displayed in a dialog nowwe would like to ask you to use a development build from  and report back if it works for you please remember to make a backup of your library before trying-out this version,1.0,0.0,merge branch ieefix of githubcom:jabref/jabref into ieefix* ieefix of githubcom:jabref/jabref:  fix the attach file dialog for starting on the users main directory (#4996)  readme toc (#4986)  fix icon size - the second (#4993)  fix background color of dialogs in dark mode (#4994)  npe-fix for preferences/ext-prog/settings for x/browse  (#4983)  bump richtextfx from 0100 to 0101 (#4989)  bump tika-core from 120 to 121 (#4984)  resize different fonts changing entry type (#4980)  extended hints - alternative to #4971 (#4975)  fix command line help text (#4979),|| add spaceing around `->`,0,0,0,0
5048,1.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,preserve encoding while copy and pasting in maintable,5043.  encodes and decodes data with utf-8.,,5043,preserve encoding while copy and pasting in maintable,5043encodes and decodes data with utf-8,|| merging this now!,handling of umlaut while copy and paste of entries,using `jabref 50-dev--snapshot--2019-05-30--master--ef2ebe165` on windows 10the bib-file is utf-8 encoded (double checked! with extern editor) and in biblatex style there are entries with umlauts in the abstract title etc- on entry has well formated umlauts and they are correctly displayed in jabref editor and preview window- copy such an entry (ctrl+c)- paste it (ctrl+v)- all umlauts are converted into `ÔøΩ`example of such a result (copied from the bib-file)```@misc{nordhausen2019c  author     {nordhausen thomas and hirt julian}  title      {one size does not fit all-systematische literaturrecherche in fachdatenbanken schritt 6: entwicklung des suchstrings}  date       {2019}  language   {ger}  doi        {106094/klinpfleg521}  abstract   {in diesem schritt werden die identifizierten synonyme und schlagwÔøΩrter entsprechend der suchkomponenten mithilfe von booleschen operatoren miteinander verknÔøΩpft diese verknÔøΩpfung wird als suchstring bezeichnet und muss fÔøΩr jede datenbank gesondert vorgenommen werden bei der entwicklung ist auch der einsatz von wortabstandsoperatoren und/oder platzhaltern fÔøΩr eines oder mehrere zeichen zu berÔøΩcksichtigen neben der verwendung von schlagwÔøΩrtern stellen die suchbefehle fÔøΩr suchbegriffe und synonyme eine mÔøΩglichkeit dar um die suche einzugrenzen bei der verwendung von suchbefehlen ist deren schreibweise (syntax) in der jeweiligen fachdatenbank zu beachten}  file       {:1015-2668-1-pbpdf:pdf}  groups     {review 2019-06}  keywords   {lesen hirt}  publisher  {albert-ludwigs-universitÔøΩt freiburg}  year       {2019}}```,|| first tests show that copying is fine but pasting alters the encoding via a bibtex parser || i can still reproduce the problem with today `jabref_windows-x64_5_0-dev--snapshot--2019-06-16--master--8d99db113` || the pr is not merged yet you can try the branch version if you like  || it is fixed thanks a lot!**edit**: but wait there is another bug maybe related to this issue here i will test and report**edit2**: the bug #5069 is not related to this issue can be closed if merged || merged this now into master so will be avaiable in a couple of minutes in the master version,1.0,0.0,5043: preserve encoding while copy and pasting in maintable,|| hi stefannice to see some commits from you -)im not sure whether this is not breaking then the parsing from strings in other encodings have you hi checked it with some iso encoded special characters? || iso special characters should be mappable in utf-8 right?! i guess currently the default encoding for copying to the clipboard is utf-8 so pasting with utf-8 made sense to me if we want to preserve the real encoding we probably need to pass the encoding with the dataflavor somehow? like  || we always use utf-8 internally so this makes indeed sense only use case: what if the users has selected a different encoding for the database in the prefs? || > if we want to preserve the real encoding we probably need to pass the encoding with the dataflavor somehow? like  guess we need to do something like this then || this is old swing stuff dont do this it should be sufficient to use the encoding in this method and apply the same encoding when pasting  || i cannot spot any place during serialization where we use an encoding different to the default encoding which seems to be utf-8 then || i dont we need to pay attention to the database encoding since this option only controls the encoding when the database is written to the file (and does not affect the entries in itself) it may be worth a try to use `parserparseentries(new stringreader(entries))` which would circumvent the need to specify an encoding but whether this works depends on if the javafx clipboard is able to correctly encode/decode the string (i tried to dig into the javafx code but it seems that they let the os handle the encoding) otherwise your solution looks good to me,0,0,0,0
5086,1.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,bugfix/5045 : modified the existing logic to comply crossref resolution with biblatex specification,5045           ( (         ----  -   -   -  -   () -  ( -   ( []()?),,5045,bugfix/5045 : modified the existing logic to comply crossref resolution with biblatex specification,5045        ( (      because github does not support autolinking there -->-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),|| thanks for your contribution could you please add a test for the changed code? || @tobiasdiez @siedlerchr sure ill make those amendments and the uts || @tobiasdiez could you please review the latest commit thanks :)  || > looks good to me now> please merge the latest master changes in there have been renaming of the fields classes so you need to fix this then we can merge@siedlerchr i pulled the changes from master this pr can be merged to the master now thanks || > please review the importsfixed and organized imports please review and merge || > > > > please review the imports> > fixed and organized imports please review and mergeplease have a look at travis checkstyle output star imports are not allowedif you use intellij you can directly import the code style from the config folderfor eclipse you can run /gradlew eclipse to automatically import the correct code styleif you then run organize imports in the ide it will be correct || > > > please review the imports> > > > > > fixed and organized imports please review and merge> > please have a look at travis checkstyle output star imports are not allowed> if you use intellij you can directly import the code style from the config folder> for eclipse you can run /gradlew eclipse to automatically import the correct code style> > if you then run organize imports in the ide it will be correctfixed imports issue please review,crossref resolution does not comply with biblatex specification,<!-- note: please use the github issue tracker only for bug reports feature requests questions and general feedback is now handled at  --> **jabref version** > jabref 50-dev--snapshot--2019-06-10--master--eb42850f7> linux 440-150-generic amd64 > java 180_212on> ubuntu 1604-  i have tested the latest development version from  and the problem persists**steps to reproduce the behavior**1 create a *proceedings* entry `foo2019````@proceedings{foo2019  title   {foo conference}  date    {2019}}```2 create an *inproceedings* entry `bar2019` with crossref to `foo2019````@proceedings{bar2019  title   {bar paper}  crossref  {foo2019}}```3 have a look at the `bar2019` row at the main table view**observed behavior**the *year* field of the `bar2019` entry gets populated with the value from the `foo2019` entry**expected behavior**all fileds (esp *year* and *journal/booktitle*) get populated with values obtained from the crossrefed entry**explanation**according to the [biblatex documentation]( (appendix b) the *booktitle* field of an *inprocessings* entry inherits the value from the *title* field of the referenced *proceedings* entry,|| as of now jabref simply takes the value of the same field from the referenced entry these advanced mappings of biblatex are not yet taken into accountthe following code needs to be adapted: || @tobiasdiez ill work on this issue || @tobiasdiez pr  is open for review || thanks to @cyraxsector  this should be fixed now in the latest master  || thanks for your effort unfortunately this does not work for me in the latest master see the [attached mwe]( for testingjabref 50-dev--snapshot--2019-08-26--master--b2e6e8383linux 440-159-generic amd64 java 1104 || thanks to you this should be fixed in the latest development version üò∏  could you please check the build from  thanks! please remember to make a backup of your library before trying-out this version,1.0,0.0,bugfix/5045: organized imports,|| please check your imports it seems like you have imported the type from the wrong packagemust be import orgjabrefmodelentrystandardentrytypeand crossref here looks also odd,0,0,0,0
5123,1.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,add search for citations in latex files (back-end and gui),here is a **latex parser tool** that reads each file line by line  parses and analyzes them for detecting different citation formats.  its user interface consists of a first dialog box that will **ask the user for a directory** to search tex files. then  the user could **select specific files**. after that  the tool parses these files and **shows all the bibliographic entries found** in a new dialog box.  ![latex_parser](  related issue: 5002](  ----  -   -   -  -   () -  ( -   ( []()?),,5002,add search for citations in latex files (back-end and gui),here is a **latex parser tool** that reads each file line by line parses and analyzes them for detecting different citation formatsits user interface consists of a first dialog box that will **ask the user for a directory** to search tex files then the user could **select specific files** after that the tool parses these files and **shows all the bibliographic entries found** in a new dialog box![latex_parser]( issue: 5002](  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),|| thanks a lot!,latex integration,dear jabref users we have accepted one student (@davidemdot) for google summer of code who will be working to improve jabref the topic of his work is to improve the workflow for latex and jabref users for example to import citations from a tex filehe is actively looking for feedback on his use cases and prototype designs of course additional ideas are always welcome as well!http://discoursejabreforg/t/project-latex-integration-please-give-us-your-feedback/1660,|| first of all congratz @davidemdot  if the tex file is related with bib file the solution would become rather complex the workflow would be something like 1 search and find \cite in tex file2 extract the keyword of the related bib entry3 search bibtex file for that keyword and extract the bib entry itself4 list bib entries in jabref main table5 add forward and backward integration for editing bib entriesim nor pro in latex or jabref but always would love to help out in any issues or related workhari || thanks so much @harinda05! i really appreciate your time the workflow that you propose is broadly what it has been planned therefore i am happy to agree with your point of viewwhenever you may have some spare time it would be great if you could have a look at some prototypes please they are shown in this forum thread: particular here is the prototype for finding bibliographic entries:![finding bibliographic entries]( || hi @davidemdot  i tested your additions with my thesis and i found it actually useful üëç however i found an issue: in the citations search results (and the tab) you show the quoting paragraph in the tooltip as there is no automated linebreak this tooltip becomes very large is there a way to automatically break the paragraph into multiple lines and to shorten long paragraphs into about 5 lines before and after the quotation? long urls probably have to be shortened by force || @calixtushi there!thank you for your quick and positive feedback big point what you commented we will work on it and have a solution as soon as possible![tooltip]( you again! || there is a class called tool tip text util or similar maybe you can add it there || as this is project is now finished and the feature included in the latest development versions ill close this issue feel free to experiment with it and report any problems that you encounter or suggestions for improvement,1.0,0.0,add user interface for the tex parser tool (#5103),,0,0,0,0
5195,1.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,add citation commands to texparser,we added a few more citation commands:  autocite    autocite    blockcquote   and  textcquote .  this pr 5194.  ----  -   -   -  -   () -  ( -   ( []()?),,5194,add citation commands to texparser,we added a few more citation commands: `autocite` `autocite` `blockcquote` and `textcquote`this pr 5194-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),,latex citations search -  missing citations,i tested around the latex citations search feature with my text and found that some citations were not parsedi often used the autocite command   `\autocite{carmody2014}` and also sometimes i used `\blockcquote[p 18]{nelson1999}{blablabla}`tested in current master they were not recognizedthose should be integrated  see also this cheatsheet for a list of other cite commandshttp://tugctanorg/info/biblatex-cheatsheet/biblatex-cheatsheetpdf@davidemdot,,1.0,0.0,add citation commands to texparser: autocite blockcquote and textcquote,,0,0,0,0
5210,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,fix double paste on different os,4845  fixes #4699  fixes #4836   upon pasting macos calls the system paste as well as jabrefframe.editaction#execute(). this caused a duplicate call of the paste.,,4836,fix double paste on different os,4845 fixes #4699 fixes #4836 upon pasting macos calls the system paste as well as jabrefframeeditaction#execute() this caused a duplicate call of the paste,|| working in linux as well!,pasting text happens twice,steps to reproduce the behavior:1 paste any text into entry editor/search field etc (using ‚åò + v)2 the text is pasted twice does not happen using right-click -> pastejabref 50 dev 85e684b5e6c04c8f47834b3c0a960a9c53d00a3cmac os x 10143 x86_64 java 180_191,|| cannot confirm under windows please try java 8u202 as there have been several bug fixes for mac: || it still persists with latest (18u202) oracle jdk || addon: if an entry is pasted into the maintable it is also pasted twice || reproduced this bug start to work on it  || thanks to @linusdietz  and @stefan-kolb  this issue is now fixed in the latest master!,1.0,0.0,merge remote-tracking branch upstream/master into fix-double-paste* upstream/master:  fix: database mode is always saved as biblatex (#5211),,0,0,0,0
5210,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,fix double paste on different os,4845  fixes #4699  fixes #4836   upon pasting macos calls the system paste as well as jabrefframe.editaction#execute(). this caused a duplicate call of the paste.,,4845,fix double paste on different os,4845 fixes #4699 fixes #4836 upon pasting macos calls the system paste as well as jabrefframeeditaction#execute() this caused a duplicate call of the paste,|| working in linux as well!,cut and paste duplicates entry in original table,to reproduce 1 open two bibliographies2 copy (command-c) one (or more) entries from first bibliography3 switch to second bibliography and paste with (command-v)then in the entry is added to the second - but also duplicated in the first bibliographyinfo:```jabref 50-dev--snapshot--2019-04-03--master--a273eb1famac os x 10143 x86_64 java 180_191```i think it might be linked with  - also here pasting with right click does not trigger it,|| seems to be only a mac issue on windows 10 i cannot confirm this try updating your java to 8u202 there have been several mac specific fixes || > seems to be only a mac issue on windows 10 i cannot confirm this> try updating your java to 8u202 there have been several mac specific fixesi did the update  however the issue is unaffected || i have a mac os i will investigate it  || @bdcaf  @tobiasdiez  cant reproduce it run jabref via `intellij idea` latest master || thanks to @linusdietz  and @stefan-kolb  this issue is now fixed in the latest master!,1.0,0.0,merge remote-tracking branch upstream/master into fix-double-paste* upstream/master:  fix: database mode is always saved as biblatex (#5211),,0,0,0,0
5229,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,add doi  url  eprint  field to general tab layout,4612           ( (         ----  -   -   -  -   () -  ( -   ( []()?),,4612,add doi url eprint  field to general tab layout,4612        ( (      because github does not support autolinking there -->-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),,general fields layout: url and doi missing,default layout does not contain the fields urldoiarxiv and so on:,|| applies only to bibtex i think || this should be a preferences issue only as it can be configured via options -> setup general fields || this has really high priority as we do every fetching based on the doi fields! || > applies only to bibtex i thinkapplies to both modes as far as i can see,1.0,0.0,add doi url eprint  field to general tab layout,,0,0,0,0
5266,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,issue #5223,issue #5223  add @software and  @dataset entrytype as an option in the biblatex and bibtex. add fields eventitle  eventdate and venue to @unpublished entry type. i used the misc set of fields to supplement software and dataset  couldn t find documentation about specific fields that should be included in @software and @dataset entry type.  ![entrytype]( ![entrytypepreferences](     ----  -   -   -  -   () -  ( -   ( []()?),,522,issue #5223,issue #5223 add @software and  @dataset entrytype as an option in the biblatex and bibtex add fields eventitle eventdate and venue to @unpublished entry type i used the misc set of fields to supplement software and dataset couldnt find documentation about specific fields that should be included in @software and @dataset entry type ![entrytype](  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),|| looks good so far please add a changelog entryregarding the fields: you can look up in the biblatex documentation: 211: the next time please do not enter the issue number in the title of the pr because github cant link it then if you write closes #xxxx or xxx then the issue will be automatically closed when the pr is merged || which biblatex styles support `@dataset`? || biblatex-bath does (https://ctanorg/pkg/biblatex-bath),many rankings disappear in jabref 30,helloi just tried to work more seriously with the new version of jabref and noticed some issues:1 my database has approximately 200 papers with rankings i can see them with a plain text editor and they are shown in jabref 211    -> the new version of jabref shows only ranks for some entries (5) all the others disappeared the text editor doesnt show any differences between the ones shown and the hidden onesi can send my bib file per mail on request,|| please send the bib file to me my email should appear on my github site:  || as reported to koppor:the ranks were shown one day later may be it was caused somehow by either the very first start of jabref or importing preferences without restarting jabref || @teertinker so everything is fine for you now?@koppor could you reproduce the issue with the bib file? if not i would suggest to close the issue for now || everything works for me now it was not a problem of my bib file it was either related to loading my bib file the first time with jabref 30 or importing preferences without restarting jabref in either case the reported issue isnt one,1.0,0.0,fix empty line,|| i think `software` and `dataset` are specific to biblatex and thus shouldnt be added here for the bibtex entry types,0,0,0,0
5266,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,issue #5223,issue #5223  add @software and  @dataset entrytype as an option in the biblatex and bibtex. add fields eventitle  eventdate and venue to @unpublished entry type. i used the misc set of fields to supplement software and dataset  couldn t find documentation about specific fields that should be included in @software and @dataset entry type.  ![entrytype]( ![entrytypepreferences](     ----  -   -   -  -   () -  ( -   ( []()?),,5223,issue #5223,issue #5223 add @software and  @dataset entrytype as an option in the biblatex and bibtex add fields eventitle eventdate and venue to @unpublished entry type i used the misc set of fields to supplement software and dataset couldnt find documentation about specific fields that should be included in @software and @dataset entry type ![entrytype](  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),|| looks good so far please add a changelog entryregarding the fields: you can look up in the biblatex documentation: 211: the next time please do not enter the issue number in the title of the pr because github cant link it then if you write closes #xxxx or xxx then the issue will be automatically closed when the pr is merged || which biblatex styles support `@dataset`? || biblatex-bath does (https://ctanorg/pkg/biblatex-bath),add software and dataset to biblatex entry types,the most recent version of biblatex now has the new fields `@software` and `@dataset` `@unpublished` entry type now also supports type eventtitle eventdate and venuewe should add them as well,|| thank you for reporting this issue we think that is already fixed in our development version and consequently the change will be included in the next releasewe would like to ask you to use a development build from  and report back if it works for you please remember to make a backup of your library before trying-out this version,1.0,0.0,fix empty line,|| i think `software` and `dataset` are specific to biblatex and thus shouldnt be added here for the bibtex entry types,0,0,0,0
5325,1.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,use binding to update global state manager,         ( (        use javafx binding instead of a listener to update the global state manager. that seems to work more reliable and fixes a bunch of issues. in particular  3142  and fixes #4441.  moreover  i fixed an error that was thrown when interacting with the toolbar (missing open statement but we were using reflection...).  ----  -   -   -  -   () -  ( -   ( []()?),,3142,use binding to update global state manager,        ( (      because github does not support autolinking there -->use javafx binding instead of a listener to update the global state manager that seems to work more reliable and fixes a bunch of issues in particular 3142  and fixes #4441moreover i fixed an error that was thrown when interacting with the toolbar (missing open statement but we were using reflection)-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),,the group panel is not updated when switching between certain libraries,jabref 40-beta3windows 7 61 amd64 java 180_131steps to reproduce:1 open jabref with multiple libraries2 switch between the libraries3 the updating of the group panel is extremely slow and not always correct-i have the following screenshots to show that behaviour: when i switch from chapter04bib to  endokrinologiekunde20170513vs400bib and vice versa the group panel is not updated while switching to fatmetabolism20170608vs400bib it is updated and then back to either chapter04bib or endokrinologiekunde it is chapter04 has 275 entries fatmetabolism has 900 and endokrinologiekunde has 1991 entries (  <summary>log file</summary>    ```  paste an excerpt of your log file here  ```</details>,|| refs #2690 || this can be reproduced in the following way: - start jabref with two bib files and the the groups side pane open - create a new database - jabref will switch to the new database but the groups side pane will display the tree of the last selected databaseif tracked the problem down to this part: the groups side pane should repaint but the `jfxpanel` does not necessarily do that the only way  i found (and i tried many ways) to force it was by re-creating the completed pane ie by putting this code into the conditional:```            stackpane root  new stackpane()            rootgetchildren()addall(new grouptreeview()getview())            scene scene  new scene(root)            groupspanesetscene(scene)```but that leads to an ugly flicker in the ui resetting the scene with a newly created instance is the key without that no change happens@tobiasdiez how can i force the `groupspane` to refresh without having to rebuild all its contents? there has to be some way to do this || @lenhard i cannot reproduce the issue with the steps you describe with the latest master for me an empty groups tree is displayed for the new database codewise it (should) work as follows: the statemanager is notified about the new database propagates the event to the group tree view the tree is updated triggers a repaint of the tree due to the binding || @tobiasdiez hm you use win10 right? if you cannot reproduce this maybe the problem is related to win7 because for me it is no problem to reproduce and i have the same setting as @bernhard-kleine we might need more help tracking this down from other people that use different settings || yes im on win10 can you please verify that  is invoked (with the proper empty database as argument) when you create a new database  || i debugged this and the method is invoked with the empty database this is the case for bibtex and biblatex but unfortunately the group tree doesnt get updated properly || can reproduce exactly as described by j√∂rg (maybe you need to switch between the bibs a bit):( || this should be fixed in the latest development version could you please check the build from  thanks! please remember to make a backup of your library before trying-out this version,1.0,0.0,use binding to update global state manager,|| yeah i was about to report that encountered this yesterday but forgot to report it || can this be removed or why is this (still) uncommented? what did it do? || to be honest i have no idea -) probably to restore the window size on start feel free to investigate -),0,0,0,0
5326,1.0,0.0,0.0,1.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,1.0,1.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,fix problem with search and switching between libraries,4846 by using bindings instead of listeners.           ( (         ----  -   -   -  -   () -  ( -   ( []()?),,4846,fix problem with search and switching between libraries,4846 by using bindings instead of listeners        ( (      because github does not support autolinking there -->-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),,cleared search is redone after switching library,to reproduce:1 open two libraries2 search in first one3 clear search in first4 switch to second library5 switch back to firstthen in first library the search is restoredinfo:```jabref 50-dev--snapshot--2019-04-03--master--a273eb1famac os x 10143 x86_64 java 180_191```,|| @bdcafi recently worked on the search feature and i would like you to try out this version here and report back if it is now working for you: || did a quick test  unfortunately it still restores the deleted search || thanks for your feedback will look into this in #4897  || this should be fixed in the latest development version could you please check the build from  thanks! please remember to make a backup of your library before trying-out this version,1.0,0.0,merge branch master into fix4846,|| adjust the comment or remove it because you pass an optional,0,0,0,0
5328,1.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,1.0,1.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,improve group coloring and item count,5327. the problem was that  gettreetablerow.getitem()  in  viewmodeltreetablecellfactory  still returned the old item (and not the new one passed as method argument to  updateitem ).   since i was already looking at the code  this pr also fixes #3112 that improves the coloring after an entry was added to the group. also fixes #2857 (at least i couldn t replicate it anymore).           ( (         ----  -   -   -  -   () -  ( -   ( []()?),,2857,improve group coloring and item count,5327 the problem was that `gettreetablerowgetitem()` in `viewmodeltreetablecellfactory` still returned the old item (and not the new one passed as method argument to `updateitem`) since i was already looking at the code this pr also fixes #3112 that improves the coloring after an entry was added to the group also fixes #2857 (at least i couldnt replicate it anymore)        ( (      because github does not support autolinking there -->-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),,group membership not indicated by colour if jabref is opened and entry is selected immediately,jabref 400-dev--snapshot--2017-05-20--master--01e854829windows 10 100 amd64 java 180_1311 open a large database (eg >6000 entries and several 100 static groups)2 if you dont wait for a couple of seconds before you start selecting an entry but instead choose to immediately select one once the databse is visible (ie the graphical user interface of jabref has appeared) the respective group of the selected entry will not be indicated by the green number3 once that has happened no matter what entry you select its group membership will not be indicated by colours in the groups panel4 to overcome this issue you have to close jabref then reopen it and wait for a couple of seconds after having opened the database i guess that some modules (?) are still loaded in the background - if you are too quick in using jabref the loading of those modules will be stopped leading to this behaviour (which was indeed quite difficult to replicate but i think ive now found the pattern),|| jabref 50-dev--snapshot--2019-09-18--master--1601770f4windows 10 100 amd64 java 1104-bellsoftthis appears to be fixed in the latest dev version cheers!,1.0,0.0,improve group coloring and item count5327 the problem was that `gettreetablerowgetitem()` in `viewmodeltreetablecellfactory` still returned the old item (and not the new one passed as method argument to `updateitem`) since i was already looking at the code this pr also fixes #3112 that improves the coloring after an entry was added to the group,,0,0,0,0
5352,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,bring back the context menu,as explained in  it is no longer possible to customize the context menu items  because the classes related to the text field behavior are not accessible. thus  instead i simply copied the relevant code from openjdk. pretty ugly workaround 5254 and refs   moreover  i removed the custom tab handling because it is now working as expected (i.e. #2902 is fixed in java 9+).    ...       ( (         ----  -   -   -  -   () -  ( -   ( []()?),,2902,bring back the context menu,as explained in  it is no longer possible to customize the context menu items because the classes related to the text field behavior are not accessible thus instead i simply copied the relevant code from openjdk pretty ugly workaround 5254 and refs  i removed the custom tab handling because it is now working as expected (ie #2902 is fixed in java 9+)        ( (      because github does not support autolinking there -->-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),,tab-navigation instead of shift-tab,currently you have to use shift+tab to move from one field to another in the entry editorhttps://stackoverflowcom/questions/12860478/tab-key-navigation-in-javafx-textarea,|| (: @matthiasgeiger  || attention!shift+tab usually moves the cursor to the _previous_ field on the contrary tab moves to the _following_ tabtherefore i suggest to keep unmodified the behaviour of shift+tab but to add the usual behavior of the tab button || this should be fixed in the latest development version could you please check the build from  thanks! || checked right now v 40 beta2 and working!many thanks!,1.0,0.0,merge branch master into contextmenu,,0,0,0,0
5354,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,fix group color when scrolling,5022. problem was that the pseudo-class was not initialized correctly but was only triggered upon changes.           ( (         ----  -   -   -  -   () -  ( -   ( []()?),,5022,fix group color when scrolling,5022 problem was that the pseudo-class was not initialized correctly but was only triggered upon changes        ( (      because github does not support autolinking there -->-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),,group view update missing when scrolling,jabref 50-dev latest snap versionlinux 515-300fc30x86_64 amd64 java 180_212a) i have many many groups so that i can only view groups by scrolling up/downb) an entry x is member of several groups one top and bottom group (bottom/top as in view-wise)expected behaviour:when i select entry x the respective groups are highlighted green i can scroll up and down and i can view which groups the entry is part ofactual behaviour: when i select entry x the respective visible groups are highlighted green any non-visible group is not highlighted when i scroll up and down all highlights are lostscreencast at https://ownclouditudk/indexphp/s/axtiqqgm7cbaybb,,1.0,0.0,fix group color when scrolling5022 problem was that the pseudo-class was not initialized correctly but was only triggered upon changes,,0,0,0,0
5432,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,fix cursor jump,5084. the entry editor was very aggressive and stole the focus from the search bar or from the main table. this lead to problems like #5084 where users overwrite the contents of the entry while doing a search. moreover  it made it impossible to navigate between entries using the arrow keys in the main table. both of these issues are fixed now.           ( (         ----  -   -   -  -   () -  ( -   ( []()?),,5084,fix cursor jump,5084 the entry editor was very aggressive and stole the focus from the search bar or from the main table this lead to problems like #5084 where users overwrite the contents of the entry while doing a search moreover it made it impossible to navigate between entries using the arrow keys in the main table both of these issues are fixed now        ( (      because github does not support autolinking there -->-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),|| when you create a new entry the focus should be in the first field does this still hold true?  || @siedlerchr thats a good suggestion but does not even work in the current master something for another pr maybe,cursor jumps from search to entry window and overrides content,usingjabref 50-dev--snapshot--2019-06-16--master--8d99db113linux 4150-52-generic amd64 java 180_172when i type a search term into the search field and the entry editor tab is open sometimesat arbitrary unexpected moments the cursor jumps into the first field of the entry window removing and overriding the content there i am now trying to avoid this by always closing the edit window before using the search field but when i forget it does still happeni have seen #1938 but as that one is for version 3 and closed i thought it may be more appropriate to open a new issue,|| i am facing same problem even on latest version: jabref 50-dev--snapshot--2019-07-29--master--f6eb5344a || thanks to @tobiasdiez  this is now fixed in the lastest masterwe would like to ask you to use a development build from  and report back if it works for you please remember to make a backup of your library before trying-out this version,1.0,0.0,fix cursor jump5084 the entry editor was very aggressive and stole the focus from the search bar or from the main table this lead to problems like #5084 where users overwrite the contents of the entry while doing a search moreover it made it impossible to navigate between entries using the arrow keys in the main table both of these issues are fixed now,,0,0,0,0
5454,1.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,fix highlight issues for lists,5277 and fixes #5035. the problem was in both cases that the list view reuses nodes when scrolling (instead of creating new ones).           ( (         ----  -   -   -  -   () -  ( -   ( []()?),,5035,fix highlight issues for lists,5277 and fixes #5035 the problem was in both cases that the list view reuses nodes when scrolling (instead of creating new ones)        ( (      because github does not support autolinking there -->-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),,web search results highlights multiple lines when selecting entries,jabref version: jabref 50-dev--snapshot--2019-06-04--master--9a5b7d1c3 on windows 81 63 amd64-  i have tested the latest development version from  and the problem persistswhen selecting results from a web search and scrolling multiple entries will turn light blue as if they were also selected functionality still appears to work correctly the extra highlighting makes it harder for the user to know which entries were actually selectedsteps to reproduce the behavior:1 open web search2 enter search criteria3 click search button4 in search results window select an entry to import5 scroll down and back up through the entries6 select another entry to import7 multiple entries turn blue even though they were not selected8 only selected entries will actually be imported(https://user-imagesentcom/26610530/59006957-7d90fc80-87f2-11e9-952f-43f9808693ffpng),|| @tobiasdiez im working on this,1.0,0.0,fix highlight issues for lists5277 and fixes #5035 the problem was in both cases that the list view reuses nodes when scrolling (instead of creating new ones),,0,0,0,0
5454,1.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,fix highlight issues for lists,5277 and fixes #5035. the problem was in both cases that the list view reuses nodes when scrolling (instead of creating new ones).           ( (         ----  -   -   -  -   () -  ( -   ( []()?),,5277,fix highlight issues for lists,5277 and fixes #5035 the problem was in both cases that the list view reuses nodes when scrolling (instead of creating new ones)        ( (      because github does not support autolinking there -->-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),,displaced hover indicator in combobox lists,jabref 50-devwindows 10 100 amd64 java 1103-bellsoft-  i have tested the latest development version from  and the problem persiststhe viewmodelcelllistfactory produces strange behaviour in combination with comboboxes in long lists the hover-indicator is displaced in relation to how far the list can be scrolled downappears only with comboboxes other lists seem to work welldespite this bug selection worksbug was mentioned in the prs #5185 and #5265 steps to reproduce the behavior:1 open fetcher sidepane2 change repository![combobox-cellfactory](https://user-imagesentcom/50491877/64158167-4b665980-ce38-11e9-81ae-15ed90c501c6gif),|| jabref 50-devlinux 500-27-generic amd64 java 180_222cannot reproduce the behaviour mentioned above i reckon this has now been fixed with  (?) || i will start investigations on this || jabref 50-devlinux 500-27-generic amd64 java 1104ok i can now reproduce this behaviour with the current snap version on the --edge channel this indicates that this issue was introduced somewhere between the release of the current snap version (or rather the one from 9th september) on the --beta channel and the current snap version on the --edge channel || @cyraxsector  you can try to narrow down the bug a git bisect: || cannot reproduce the behavior mentioned above can you please provide more information || jabref 50-dev--snapshot--2019-09-26--master--1a6c92c79windows 10 100 amd64 java 1104-bellsofti can still reproduce this behaviour you can force it to happen by scrolling with the mouse wheel in the fetcher sidepane and then switching back to just scrolling with the mouseif you just scroll with the mouse (without using the mouse wheel) you will sometimes encounter the issue and sometimes not but by using the mouse wheel scrolling first and then the mouse scrolling itself afterwards the issue always appears || this should be fixed in the latest development version could you please check the build from  thanks! please remember to make a backup of your library before trying-out this version || jabref 500-dev--2019-10-18----bc26c3ac5windows 10 100 amd64 java 1202i can confirm that this has been fixed in the current dev version,1.0,0.0,fix highlight issues for lists5277 and fixes #5035 the problem was in both cases that the list view reuses nodes when scrolling (instead of creating new ones),,0,0,0,0
5472,1.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,fix highlight problem in entry preview,5069 by using markjs.           ( (         ----  -   -   -  -   () -  ( -   ( []()?),,5069,fix highlight problem in entry preview,5069 by using markjs        ( (      because github does not support autolinking there -->-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),,entry preview lose formating if search field is used,tried with current 5* dev on windows 10entry preview looks nice![snapshot]( when i use the search field eg `keywordslesen` or `authornord` then it looks like this![copy-paste](https://user-imagesentcom/11861496/59857412-328df200-9379-11e9-84b9-ff65369627cdpng),|| issues is from the search highlighting of the search term when you stop searching its back to normal  || the highlighting is handled by this simple javascript code: || i know nothing about jswhat does your last post mean? it is easy to fix or the opposite? || i have tried if this issue still remains in the master branch and not only does it lose formatting it also jumps to the author field automatically so i am rewriting my author after search finds a resultthe formatting goes back to normal when i click to other article not after finishing search as @siedlerchr saidi would like to look at this issue and fix it || the problem is probably that we read the inner text (ie everything without formatting) and then set it as the inner html should work if `documentbodyinnertext` is replaced by `documentbodyinnerhtml` || @tobiasdiez  it is not that easy thats what i did before the problem is then that it displays and searches matches in html tags  || this should be fixed in the latest development version could you please check the build from  thanks! please remember to make a backup of your library before trying-out this version || confirmed it is fixed and working for methanks a lot,1.0,0.0,fix highlight problem in entry preview5069 by using markjs,|| ```suggestion- we fixed an issues where the search highlight in the entry preview did not work 5069]( || please fix indentaiotn! :-d,0,0,0,0
5501,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,new ads fetcher,i added a new fetcher that uses the new ads api.  some open question for implementation: * which ids should be viable ids for idbasedfetchers? only doi? only ads bibcode? the current/old version can handle both  but i m not sure if this is intentional.  * we need an api key to access the api. i have one for development  but someone has to create one for the project.  * we need to set a limit on how much search results are shown. is 20 a good value?  refs #4949   ----  -   -   -  cleanups tasks (change comments and documentation) -  -  ( -  add api key,,4949,new ads fetcher,i added a new fetcher that uses the new ads api some open question for implementation:* which ids should be viable ids for idbasedfetchers? only doi? only ads bibcode? the current/old version can handle both but im not sure if this is intentional * we need an api key to access the api i have one for development but someone has to create one for the project * we need to set a limit on how much search results are shown is 20 a good value?refs #4949 -----  change in changelogmd described-  -  cleanups tasks (change comments and documentation)-  manually tested changed features in running jabref-  (  add api key,|| that looks already really good nice job! - if it is (relatively) easy to implement then doi + bibcode support would be nice- i will request an official key- 20 entries sounds indeed gooddo you have any questions codewise at the moment or anything else where we can help? || > if it is (relatively) easy to implement then doi + bibcode support would be nicethat is no problem i already have implemented this> do you have any questions codewise at the moment or anything else where we can help?at the moment i dont have any questions but i would like to get as much feedback as possible || right now i have implemented the fetcher in a new class should we keep the old one and remove it later? || you can delete/replace the old fetcher there is no point in having two fetcher for the same online service || great thanks! any plans / chances that the new fetcher will be back ported to the latest stable release (43) !?,switch to ads api,ads classic is closing this fall currently ads search in jabref fetches entries from ads classic (and also they are linked to ads classic) is there any plans for updating ads classic to new ads in web searchÔºüalthough we can by ourselves replace all the  with  in our existed bib files or modify some of the codes i am wondering if there are any other better solutionsmany thanks,|| currently we were not aware of ongoing changes can you please provide us some links to the new search function and maybe to some documentation? this would make life a bit easier for us thank you! || thanks for your emailopen ads classic ( and you will find on thetop of the page: ‚Äúads classic will be deprecated in may 2019 and retired inoctober 2019 please redirect your searches to the new ads modern form orthe classic form more info can be found on our blog‚Äùan official reminder about the transition is available here: search in classic form is still available: here is *a simple guide* to the new ads where you can find more aboutthe search function:  i find the new ads is much much better than the old version)i really appreciate your work on it as i am a heavy user of jabrefbeston sat may 4 2019 at 6:21 pm matthias geiger <notifications@githubcom>wrote:> currently we were not aware of ongoing changes> can you please provide us some links to the new search function and maybe> to some documentation?>> this would make life a bit easier for us>> thank you!>> ‚Äî> you are receiving this because you authored the thread> reply to this email directly view it on github> < or mute> the thread> < > || we should probably switch to the official api:  to  we need to use the search api and then afterwards the [export api]( to obtain the bibtex code || a few weeks ago i noticed that using the ads option in the drop-down list in the id-based entry generator had stopped working and seeing this issue i wonder if the timing of that is related? has it stopped working for anyone else?(im using jabref version 431 on macos 10126 in case thats relevant)edit: nevermind apparently the whitespace character that was being included in the bibcode when i copynpasted it was causing it to fail || i will try to resolve this issue || this issue can be closed || thanks to @johahu this should be fixed in the latest development version could you please check the build from  thanks! please remember to make a backup of your library before trying-out this version,1.0,0.0,add token,|| just on comment here: please do not use orgjson as we are getting license troubles when using this library with more strict linux distributions see  for some detailsan alternative should be `orggson` || i will remove this line because it really is unnecessary but i would like to stick with orgjson in this pr and come up with a follow up pr because orgjson is already used in other fetchers i would like to replace them all together i propose javaxjson as library because the api is nearly the same gpl 20 should give no problemsi will 3703 if @siedlerchr hasnt dived in already || you could also use: bibcodesstreamtoarray(string::new) || you really have to be careful to check if all properties of the json response are mandatory or if they can be optional in the latter case you will run into exceptions if you dont check if it has the attribute || why not simply use collect(collectorstolist() and then check if empty || i would go with gson then in a next step because the unirest people use gson internally as well you can directly use the unirest-json implementation?in any case we should write an adr || i checked the api i found no indication on their resource pages that the field i used was optional i tested several edge cases on the endpoint and no result was missing these fields or if they were missing they returned 404 anywayand i catch jsonexception and return an empty list || i have opened a follow up pr #5511 that can be merged after this one is merged,0,0,0,0
5519,1.0,0.0,0.0,1.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,fix xmp null error,5449. was caused by wrapping a set of fields in a treeset without specifying the comparator.           ( (         ----  -   -   -  -   () -  ( -   ( []()?),,5449,fix xmp null error,5449 was caused by wrapping a set of fields in a treeset without specifying the comparator        ( (      because github does not support autolinking there -->-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),,null error while writing xmp metadata,archlinux package by j0hannes #5299 ```jabref 500-dev--2019-10-14----d2ddff574linux 536-zen1-1-zen amd64 java 1202``````console$ java --versionopenjdk 1104 2019-07-16openjdk runtime environment (build 1104+11)openjdk 64-bit server vm (build 1104+11 mixed mode)$ archlinux-java statusavailable java environments:  java-11-openjdk (default)```-  i have tested the latest development version from  and the problem persistsan error with no description:> author2000>   error while writing /home/user/documents/literature/tpsapdf:>     null> > finished writing xmp for 0 file (0 skipped 1 errors)happens with different pdfs the event log is emptysteps to reproduce the behavior:1 create an entry2 add link to a local pdf in the general tab3 select this file4 tool - write xmp5 a pop-up appears,|| @homocomputeris are the pdfs freely available? it would be nice if you added them via a pr so that we can create test cases- pdf directory for tests:  bib files:  (or add the bib files as skeleton java code or just as text in the pr) || the one from my snippet is  it doesnt write to any pdffor example from these links i downloaded jabref-authorsbib and one pdf and say i want to write the 1st entry metadata to the pdf:```garridokallstromkummetal2016  error while writing /home/user/documents/literature/thesis-examplepdf:    nullfinished writing xmp for 0 file (0 skipped 1 errors)``` || i tried it today with the latest snapshot on windows 10: the same `null` error is raised || thanks to @tobiasdiez  this issue should be fixed nowwe would like to ask you to use a development build from  and report back if it works for you please remember to make a backup of your library before trying-out this version,1.0,0.0,fix xmp null error5449 was caused by wrapping a set of fields in a treeset without specifying the comparator,,0,0,0,0
5539,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,improve performance,improve performance by: - caching fields as keywordlist - remove duplicate change listener - remove preference access in loop  with these changes  the mega huge library of @aegit works without too much delays (the initial loading of the database is a bit slow but still ok). thus  this pr is a potential fix for #4430 and for            ( (         ----  -   -   -  -   () -  ( -   ( []()?),,4430,improve performance,improve performance by:- caching fields as keywordlist- remove duplicate change listener- remove preference access in loopwith these changes the mega huge library of @aegit works without too much delays (the initial loading of the database is a bit slow but still ok) thus this pr is a potential fix for #4430 and for  describe the changes you have made here:        ( (      because github does not support autolinking there -->-----  change in changelogmd described-  -  manually tested changed features in running jabref-   ()-  (   ( [helpjabreforg](https://githubcom/jabref/helpjabreforg/issues)?),|| @tobiasdiez wonderful! let me know when i can start testing this fix,performance issues in development version 50,jabref 50-dev--snapshot--2018-10-28--master--05047f32awindows 10 100 amd64 java 180_191steps to reproduce the behaviour:1 open a large database (in my case > 16000 entries)2 select a group in the groups panel3 entries belonging to the group are displayed in the main panel4 select another group in the groups panel5 entries belonging to this group are displayed again in the main panel note however that there is a noticeable delay until the entries are displayed (about 1 to 2 seconds)if you repeat steps 4 and 5 you will always notice this delay of one or two seconds this can get quite annoying if you quickly have to change groups note that in jabref version 382 (which i am still using as my main version) there is no such delay is it possible to get a performance in handling large databases in version 50 that is comparable to that of 382?,|| the changing of group is still slow and causes a spike in cpu load  tested with a large database o 6400 entries and many groups memory is not an issue( || can confirm - i might have time during this weekend to run some additional performance test unfortunately my yourkit java profiler test license ran out so i will probably have to create a new virtual machine and run a new installation of yourkit in there - unless someone else knows a method to extend the evaluation period a little? i dont really need the tool except for showing the performance issues in the current jabref version compared to version 382 || this should be fixed now a few remaining performance issues are mentioned at  || jabref 500-dev--2019-11-28----ce0e8870cwindows 10 100 amd64 java 1301this issue indeed appears to be fixed in the current version of jabref (the remaining issues can be found here:  big shout out to @tobiasdiez for the continuous support!,1.0,0.0,merge branch master into improveperf,|| looks good a follow-up could be test cases for that good-first-issuei checked eclipse collections they offer only [pair]( and some [multimaps]( but not a double-key map || i remember hard discussions when introducing this that we really need it etc what a pity that is was not documented in retrospective that would have been interestingnice to see that this special function is gone now || interesting that this is not needed anymore - i tested it locally and the star works fine || add an empty line before üòá  || cant you use [google guavas cache]( üòá  maybe with [eclipse collections twin]( character> keywordlist> storedkeywordlist  cachebuildernewbuilder()  build(new cacheloader<pair<field character> keywordlist>() {    @override    public string load(final pair<field character> pair) throws exception {      return getfield(pairgetone()map( pairgettwo())    }})``````javareturn storedkeywordlistget(tuplespair(field keywordseparator))```ok invalidation is worse (as it is not possible to invalidate all pairs having the same first value (easily))```javastoredkeywordlistinvalidateall()```(i now that tuplespair() might be slower than your approach howver i would like that the cache can be tweaked ^^) || this could also be a good place for guavas cache || entrychangedevents are included in the databasechangedevents (which also trigger a `markbasechanged`) || that looks complicated üòÑ  has the nice explanation> note: if you do not need the features of a cache concurrenthashmap is more memory-efficient -- but it is extremely difficult or impossible to duplicate most cache features with any old concurrentmapi guess we do not need these cache features (but ive also never worked with guave cachesso i cannot appreciate them),0,0,0,0
5669,1.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0, fix change on disk detection,this will solve the whole change-on-disk-dection things similar as conflicts are solved for a shared-database. this pr builds on  and is an alternative to   ## implementation motivation  in 2016  i designed the database synchronization feature (  which i briefly described at   - multiple users should be supported  seamlessly  - if user a and b work on the bibfile  a modification by user a on a bibtex entry b1 should not trigger any  changes  dialog if user b did not do any changes. - a  merge entries  dialog should popup if users a and b modified the same entry.  how this works can be tried out using the [shared sql database feature]( of jabref  where @obraliar and me worked hard to  have a very nice user experience.  technically  this is not that easy to achieve. however  users will be happy  if it  just works .  at each instance of jabref:  - local state l is known - remote state r is known - in case an update is made remotely  the diff can be applied to r.   so r  is known. based on r and r   the entries e where a change was made  are known.   based on e  changes can be applied to l.   if in l the entry was not modified: just apply the update.   if in l the entry was modified: start the merge entries dialog.  ## implementation idea  (  ## current implementation state  todo:  - add tests (multi-threading: update file in parallel   !) - saved flag local in the update monitor - work on work on bibdatabasediff only - trigger the merge entries popup  optional: - instead of the merge entries dialog  the changes should be displayed - add a button to the change display panel to open the merge entries dialog  because the merge entries dialog has a visual diff instead of a text-only description.  done:  - after a synchronization is triggered: the referencefile is updated with the current database - synchronize change detection and file writing: should not happen in parallel - use !thread.currentthread().isinterrupted() instead of true in endless loop in thread       -     . -   -   -   -   -   () -  [](   .,,,,,,,,,1.0,0.0,,,0,0,0,0
5670,1.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,1.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,improve column preference migration,333. : 47](   5661.       -     . -   -   -   -   -   () -  [](   .,,5661,improve column preference migration,    #333 : 47]( title of the pr must not reference an issue because github does not support autolinking there-->5661<!-- - all items with `` are still a todo-  `` - remove items not applicable-->-  change in changelogmd described (if applicable)-  -  -   ()-  [](   <https://githubcom/jabref/user-documentation/issues>,,special columns are not displayed correctly,latest dev version special columns such as `qualityassured` simply display the text (eg `qualityassured`) instead of the icon,|| @calixtus  you recently worked on this feature? || oh thanks didnt see that thanks for the fixsorry that im not much of help at the moment i submitted my thesis and im learning for my exams in the end of january maybe ive got some time in christmas-holidays,1.0,0.0,improve column preference migration,|| could you add a `@param` description for the `width` too? || can you copy the old javadoc to here? || can you copy the old javadoc to here and remove the `qualifier` parameter? || i dont see any value in copying the java doc especially since this is a stupid constructor that does the obvious thing -),0,0,0,0
5680,1.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,add throttle to autosaveuimanager,as discussed in #5679 there are a lot of save actions performed when autosave is turned on. this pr adds a timer which limits the save actions to one in 200ms which is especially handy when automated tasks like find and replace are performed.  -   -  ,,5679,add throttle to autosaveuimanager,as discussed in #5679 there are a lot of save actions performed when autosave is turned on this pr adds a timer which limits the save actions to one in 200ms which is especially handy when automated tasks like find and replace are performed-  change in changelogmd described (if applicable)-  ,|| when working on this the comments on  should be checked üòá  || i found the scheduledservice from javafx mabye this is an option as well? || @koppor  by introducing a deferred execution of the actual save operation a race condition can happen when the old save operation is still in progressthis leads me to another question: lets say an auto-save action is happening and during the save process the user presses ctrl-s what happens?as i can see there are two `savedatabaseaction` created: one in the `basepanel` and one in the `autosavemanager` no locking is happening so basically the later manual saved version could be overwritten by the older autosave one?  || @siedlerchr i think this is more for recurring tasks rather to simply defer a task as it says that it will go from scheduled -> running -> finished -> scheduled automatically || actually @siedlerchr you were right! there is a `scheduledthreadpoolexecutor` i now completely changed the way to tackle the problem `autosavemanager` had a normal `executorservice` there was actually a bug when saving took longer `executorservice` would through an exception as the pool size was only of the size one  under certain circumstances newer information might not get auto-saved thereforethe current implementation replaces the `executorservice` by an `scheduledexecutorservice`additionally the bug of #4877 can now be reproduced when autosave is enabled change something and quickly press ctrl-s -> you will see the error so we should make the savedatabaseaction thread safe to prevent the error@koppor what do you think? || ah cool that sounds good thread safe sounds fittingthere are different ways to achieve this and maybe one of those newer locking things is helping  || @ka0o0 do you use eclipse or intellij? with intellij (and the complete setup from  the autoformat takes care>  by introducing a deferred execution of the actual save operation a race condition can happen when the old save operation is still in progress this leads me to another question: lets say an auto-save action is happening and during the save process the user presses ctrl-s what happens?(unsure whether this is still the question) - either cancel the current autosave or let it go and then trigger it again i would prefer the former (as long as we write to `sav`  and then move to `bib` - thus we do not destroy the `bib` file of the user) || @koppor actually i have important that already but i forgot to do auto formatting before committing ive now created a pre-commit hook which runs checkstyle so that this doesnt happens again || thanks again!,throttle autosave actions,**is your suggestion for improvement related to a problem? please describe**while i was debugging for issue #5658 i noticed that when doing a find and replace the save action will be performed for every change in entries**describe the solution youd like**a common way of limiting unnecessary write operations is to introduce some sort of throttling it works in a way that the application waits for n milliseconds until it actually performs the write operation if however during the time another change has occurring the original task is canceled and the delay is restarted **additional context**java provides a `timer` class which can be used for this purpose,,1.0,0.0,fix checkstyle errors,|| should this be called in the application main thread as the class is called `uimanager`? || please introduce a constant - i think at the header of this class is ok - (no magic numbers in the code) || wild guess: can this be written as lambda? || i would assume it is ok as is || no need to set to `null` as this is the default value || i also thought so but unfortunately not see [here]( || can `?` be replaced by `void` as no return value is used? || we have the convention to never use star-imports (you can also import the code style see wiki) || space after `if` || i would need to do a cast then on line 53 || thanks fixed that,0,0,0,0
